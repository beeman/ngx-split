{"version":3,"sources":["webpack:///Users/beeman/kikstart/ngx-split/libs/ngx-split/src/index.ts","webpack:///Users/beeman/kikstart/ngx-split/libs/ngx-split/src/lib/component/split.component.ts","webpack:///Users/beeman/kikstart/ngx-split/libs/ngx-split/src/lib/directive/splitArea.directive.ts","webpack:///Users/beeman/kikstart/ngx-split/libs/ngx-split/src/lib/ngx-split.module.ts","webpack:///Users/beeman/kikstart/ngx-split/libs/ngx-split/src/lib/utils.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app.routes.ts","webpack:///src/app/example-enum.ts","webpack:///src/app/example-list.ts","webpack:///src/app/pages/examples/component/AComponent.ts","webpack:///src/app/pages/examples/component/class-access.component.ts","webpack:///src/app/pages/examples/component/custom-gutter-style.component.ts","webpack:///src/app/pages/examples/component/dir-rtl.component.ts","webpack:///src/app/pages/examples/component/geek-demo.component.ts","webpack:///src/app/pages/examples/component/gutter-click.component.ts","webpack:///src/app/pages/examples/component/iframe.component.ts","webpack:///src/app/pages/examples/component/min-max.component.ts","webpack:///src/app/pages/examples/component/nested.component.ts","webpack:///src/app/pages/examples/component/simple.component.ts","webpack:///src/app/pages/examples/component/sync.component.ts","webpack:///src/app/pages/examples/component/toggling-dom-and-visible.component.ts","webpack:///src/app/pages/examples/component/transitions.component.ts","webpack:///src/app/pages/examples/component/workspace-localstorage.component.ts","webpack:///src/app/pages/examples/format-date.ts","webpack:///src/app/ui/components/example-title.component.ts","webpack:///src/app/ui/components/topbar.component.ts","webpack:///src/app/ui/ui-shared.module.ts","webpack:///src/app/ui/ui.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["SplitComponent","ngZone","elRef","cdRef","renderer","_direction","_unit","_gutterSize","_gutterStep","_restrictMove","_useTransition","_disabled","_dir","_gutterDblClickDuration","dragStart","dragEnd","gutterClick","gutterDblClick","dragProgressSubject","dragProgress$","asObservable","isDragging","dragListeners","snapshot","startPoint","endPoint","displayedAreas","hidedAreas","_clickTimeout","direction","runOutsideAngular","setTimeout","addClass","nativeElement","length","component","newArea","order","size","minSize","maxSize","visible","push","build","some","a","area","find","splice","indexOf","resetOrders","resetSizes","undefined","areas","comp","forEach","map","sizes","formatedSizes","s","isValid","unit","i","stopDragging","every","sort","b","setStyleOrder","useUserSizes","defaultSize","wildcardSizeAreas","filter","alreadyGotOne","refreshStyleSizes","markForCheck","setStyleFlex","sumGutterSize","getNbGutters","gutterSize","event","gutterNum","tempPoint","x","y","window","clearTimeout","notify","gutterDblClickDuration","gutterOrder","preventDefault","stopPropagation","disabled","lastSteppedOffset","allAreasSizePixel","allInvolvedAreasSizePercent","areasBeforeGutter","areasAfterGutter","areaSnapshot","sizePixelAtStart","sizePercentAtStart","restrictMove","unshift","reduce","t","listen","bind","dragEvent","lockEvents","gutterEls","toArray","offset","dir","steppedOffset","Math","round","gutterStep","areasBefore","areasAfter","remain","abs","all","list","areaToReset","percentAfterAbsorption","total","item","unlockEvents","fct","pop","removeClass","type","getVisibleAreaSizes","emit","transitionEndSubscriber","run","next","v","setAttribute","subscriber","pipe","selector","exportAs","changeDetection","OnPush","styleUrls","template","SplitAreaDirective","split","_order","_size","_minSize","_maxSize","_lockSize","_visible","lockListeners","addArea","transitionListener","propertyName","value","setStyle","grow","shrink","basis","isMin","isMax","e","removeArea","updateArea","showArea","hideArea","NgxSplitModule","ngModule","providers","imports","declarations","exports","getPointFromEvent","changedTouches","clientX","clientY","getElementPixelSize","rect","getBoundingClientRect","width","height","getInputBoolean","getInputPositiveNumber","defaultValue","Number","isNaN","isUserSizesValid","getAreaMinSize","lockSize","getAreaMaxSize","getGutterSideAbsorptionCapacity","sideAreas","pixels","acc","res","getAreaAbsorptionCapacity","pixelRemain","pixelAbsorb","getAreaAbsorptionCapacityPercent","getAreaAbsorptionCapacityPixel","tempPixelSize","tempPercentSize","maxSizePixel","minSizePixel","containerSizePixel","updateAreaSize","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module","id","AppComponent","router","events","subscribe","scrollTo","styles","AppModule","forRoot","initialNavigation","bootstrap","routes","path","loadChildren","m","HomeModule","ExamplesModule","ChangelogModule","DocumentationModule","ExampleEnum","srcUrlBase","srcUrlBaseApp","examples","SIMPLE","label","srcUrl","MINMAX","NESTED","IFRAME","TRANSITION","SYNC","STYLE","TOGGLE","CLICK","CODE","GEEK","DIR","WORKSPACE","AComponent","exampleEnum","console","log","Date","ClassAccessComponent","areasEl","host","CustomGutterStyleComponent","DirRtlComponent","GeekDemoComponent","d","useTransition","getRandomNum","color","getRandomColor","present","index","sortableComponent","writeValue","random","toString","GutterClickComponent","isDisabled","dblClickTime","logMessages","content","sub","mySplitEl","data","text","JSON","stringify","logsEl","scroll","top","unsubscribe","$event","IframeComponent","showIframeHider","MinMaxComponent","NestedComponent","SimpleComponent","percent","area1","area2","pixel","area3","SyncComponent","mySplitAEl","name","mySplitBEl","mySplitCEl","sizesSplitA","setVisibleAreaSizes","sizesSplitB","sizesSplitC","test","TogglingDomAndVisibleComponent","action","isVisibleA","isVisibleB","isVisibleC","isPresentA","isPresentB","isPresentC","logs","eventName","TransitionsComponent","a1s","a2s","a3s","a1v","a2v","a3v","only","keepA","keepB","keepC","left","center","right","defaultConfig","columns","rows","WorkspaceLocalstorageComponent","localStorageName","config","localStorage","getItem","parse","resetConfig","removeItem","columnindex","c","column","r","row","saveLocalStorage","setItem","formatDate","date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","millisecond","getMilliseconds","hourFormatted","minuteFormatted","secondFormatted","millisecondFormatted","ExampleTitleComponent","sanitizer","ex","_type","bypassSecurityTrustHtml","url","bypassSecurityTrustResourceUrl","TopbarComponent","isCollapsed","UiSharedModule","COMPONENTS","MODULES","UiModule","environment","production","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["export * from './lib/component/split.component';\nexport * from './lib/directive/splitArea.directive';\nexport * from './lib/ngx-split.module';\nexport * from './lib/interface';\n","import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Renderer2,\n  AfterViewInit,\n  OnDestroy,\n  ElementRef,\n  NgZone,\n  ViewChildren,\n  QueryList,\n  EventEmitter,\n} from '@angular/core';\nimport { Observable, Subscriber, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n  IArea,\n  IPoint,\n  ISplitSnapshot,\n  IAreaSnapshot,\n  IOutputData,\n  IOutputAreaSizes,\n} from '../interface';\nimport { SplitAreaDirective } from '../directive/splitArea.directive';\nimport {\n  getInputPositiveNumber,\n  getInputBoolean,\n  isUserSizesValid,\n  getAreaMinSize,\n  getAreaMaxSize,\n  getPointFromEvent,\n  getElementPixelSize,\n  getGutterSideAbsorptionCapacity,\n  updateAreaSize,\n} from '../utils';\n\n/**\n * ngx-split\n *\n *\n *  PERCENT MODE ([unit]=\"'percent'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |       20                 30                 20                 15                 15      | <-- [size]=\"x\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |calc(20% - 8px)    calc(30% - 12px)   calc(20% - 8px)    calc(15% - 6px)    calc(15% - 6px)| <-- CSS flex-basis property (with flex-grow&shrink at 0)\n * |     152px              228px              152px              114px              114px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *  flex-basis = calc( { area.size }% - { area.size/100 * nbGutter*gutterSize }px );\n *\n *\n *  PIXEL MODE ([unit]=\"'pixel'\")\n *  ___________________________________________________________________________________________\n * |       A       [g1]       B       [g2]       C       [g3]       D       [g4]       E       |\n * |-------------------------------------------------------------------------------------------|\n * |      100                250                 *                 150                100      | <-- [size]=\"y\"\n * |               10px               10px               10px               10px               | <-- [gutterSize]=\"10\"\n * |   0 0 100px          0 0 250px           1 1 auto          0 0 150px          0 0 100px   | <-- CSS flex property (flex-grow/flex-shrink/flex-basis)\n * |     100px              250px              200px              150px              100px     | <-- el.getBoundingClientRect().width\n * |___________________________________________________________________________________________|\n *                                                                                 800px         <-- el.getBoundingClientRect().width\n *\n */\n\n@Component({\n  selector: 'ngx-split',\n  exportAs: 'ngxSplit',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: [`./split.component.scss`],\n  template: ` <ng-content></ng-content>\n    <ng-template\n      ngFor\n      [ngForOf]=\"displayedAreas\"\n      let-index=\"index\"\n      let-last=\"last\"\n    >\n      <div\n        *ngIf=\"last === false\"\n        #gutterEls\n        class=\"ngx-split-gutter\"\n        [style.flex-basis.px]=\"gutterSize\"\n        [style.order]=\"index * 2 + 1\"\n        (mousedown)=\"startDragging($event, index * 2 + 1, index + 1)\"\n        (touchstart)=\"startDragging($event, index * 2 + 1, index + 1)\"\n        (mouseup)=\"clickGutter($event, index + 1)\"\n        (touchend)=\"clickGutter($event, index + 1)\"\n      >\n        <div class=\"ngx-split-gutter-icon\"></div>\n      </div>\n    </ng-template>`,\n})\nexport class SplitComponent implements AfterViewInit, OnDestroy {\n  private _direction: 'horizontal' | 'vertical' = 'horizontal';\n\n  @Input() set direction(v: 'horizontal' | 'vertical') {\n    this._direction = v === 'vertical' ? 'vertical' : 'horizontal';\n\n    this.renderer.addClass(this.elRef.nativeElement, `ngx-${this._direction}`);\n    this.renderer.removeClass(\n      this.elRef.nativeElement,\n      `ngx-${this._direction === 'vertical' ? 'horizontal' : 'vertical'}`\n    );\n\n    this.build(false, false);\n  }\n\n  get direction(): 'horizontal' | 'vertical' {\n    return this._direction;\n  }\n\n  ////\n\n  private _unit: 'percent' | 'pixel' = 'percent';\n\n  @Input() set unit(v: 'percent' | 'pixel') {\n    this._unit = v === 'pixel' ? 'pixel' : 'percent';\n\n    this.renderer.addClass(this.elRef.nativeElement, `ngx-${this._unit}`);\n    this.renderer.removeClass(\n      this.elRef.nativeElement,\n      `ngx-${this._unit === 'pixel' ? 'percent' : 'pixel'}`\n    );\n\n    this.build(false, true);\n  }\n\n  get unit(): 'percent' | 'pixel' {\n    return this._unit;\n  }\n\n  ////\n\n  private _gutterSize: number = 11;\n\n  @Input() set gutterSize(v: number | null) {\n    this._gutterSize = getInputPositiveNumber(v, 11);\n\n    this.build(false, false);\n  }\n\n  get gutterSize(): number {\n    return this._gutterSize;\n  }\n\n  ////\n\n  private _gutterStep: number = 1;\n\n  @Input() set gutterStep(v: number) {\n    this._gutterStep = getInputPositiveNumber(v, 1);\n  }\n\n  get gutterStep(): number {\n    return this._gutterStep;\n  }\n\n  ////\n\n  private _restrictMove: boolean = false;\n\n  @Input() set restrictMove(v: boolean) {\n    this._restrictMove = getInputBoolean(v);\n  }\n\n  get restrictMove(): boolean {\n    return this._restrictMove;\n  }\n\n  ////\n\n  private _useTransition: boolean = false;\n\n  @Input() set useTransition(v: boolean) {\n    this._useTransition = getInputBoolean(v);\n\n    if (this._useTransition)\n      this.renderer.addClass(this.elRef.nativeElement, 'ngx-transition');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'ngx-transition');\n  }\n\n  get useTransition(): boolean {\n    return this._useTransition;\n  }\n\n  ////\n\n  private _disabled: boolean = false;\n\n  @Input() set disabled(v: boolean) {\n    this._disabled = getInputBoolean(v);\n\n    if (this._disabled)\n      this.renderer.addClass(this.elRef.nativeElement, 'ngx-disabled');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'ngx-disabled');\n  }\n\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  ////\n\n  private _dir: 'ltr' | 'rtl' = 'ltr';\n\n  @Input() set dir(v: 'ltr' | 'rtl') {\n    this._dir = v === 'rtl' ? 'rtl' : 'ltr';\n\n    this.renderer.setAttribute(this.elRef.nativeElement, 'dir', this._dir);\n  }\n\n  get dir(): 'ltr' | 'rtl' {\n    return this._dir;\n  }\n\n  ////\n\n  private _gutterDblClickDuration: number = 0;\n\n  @Input() set gutterDblClickDuration(v: number) {\n    this._gutterDblClickDuration = getInputPositiveNumber(v, 0);\n  }\n\n  get gutterDblClickDuration(): number {\n    return this._gutterDblClickDuration;\n  }\n\n  ////\n\n  @Output() dragStart = new EventEmitter<IOutputData>(false);\n  @Output() dragEnd = new EventEmitter<IOutputData>(false);\n  @Output() gutterClick = new EventEmitter<IOutputData>(false);\n  @Output() gutterDblClick = new EventEmitter<IOutputData>(false);\n\n  private transitionEndSubscriber: Subscriber<IOutputAreaSizes>;\n  @Output() get transitionEnd(): Observable<IOutputAreaSizes> {\n    return new Observable(\n      (subscriber) => (this.transitionEndSubscriber = subscriber)\n    ).pipe(debounceTime<IOutputAreaSizes>(20));\n  }\n\n  private dragProgressSubject: Subject<IOutputData> = new Subject();\n  dragProgress$: Observable<\n    IOutputData\n  > = this.dragProgressSubject.asObservable();\n\n  ////\n\n  private isDragging: boolean = false;\n  private dragListeners: Array<Function> = [];\n  private snapshot: ISplitSnapshot | null = null;\n  private startPoint: IPoint | null = null;\n  private endPoint: IPoint | null = null;\n\n  public readonly displayedAreas: Array<IArea> = [];\n  private readonly hidedAreas: Array<IArea> = [];\n\n  @ViewChildren('gutterEls') private gutterEls: QueryList<ElementRef>;\n\n  constructor(\n    private ngZone: NgZone,\n    private elRef: ElementRef,\n    private cdRef: ChangeDetectorRef,\n    private renderer: Renderer2\n  ) {\n    // To force adding default class, could be override by user @Input() or not\n    this.direction = this._direction;\n  }\n\n  public ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      // To avoid transition at first rendering\n      setTimeout(() =>\n        this.renderer.addClass(this.elRef.nativeElement, 'ngx-init')\n      );\n    });\n  }\n\n  private getNbGutters(): number {\n    return this.displayedAreas.length === 0\n      ? 0\n      : this.displayedAreas.length - 1;\n  }\n\n  public addArea(component: SplitAreaDirective): void {\n    const newArea: IArea = {\n      component,\n      order: 0,\n      size: 0,\n      minSize: null,\n      maxSize: null,\n    };\n\n    if (component.visible === true) {\n      this.displayedAreas.push(newArea);\n\n      this.build(true, true);\n    } else {\n      this.hidedAreas.push(newArea);\n    }\n  }\n\n  public removeArea(component: SplitAreaDirective): void {\n    if (this.displayedAreas.some((a) => a.component === component)) {\n      const area = this.displayedAreas.find((a) => a.component === component);\n      this.displayedAreas.splice(this.displayedAreas.indexOf(area), 1);\n\n      this.build(true, true);\n    } else if (this.hidedAreas.some((a) => a.component === component)) {\n      const area = this.hidedAreas.find((a) => a.component === component);\n      this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\n    }\n  }\n\n  public updateArea(\n    component: SplitAreaDirective,\n    resetOrders: boolean,\n    resetSizes: boolean\n  ): void {\n    if (component.visible === true) {\n      this.build(resetOrders, resetSizes);\n    }\n  }\n\n  public showArea(component: SplitAreaDirective): void {\n    const area = this.hidedAreas.find((a) => a.component === component);\n    if (area === undefined) {\n      return;\n    }\n\n    const areas = this.hidedAreas.splice(this.hidedAreas.indexOf(area), 1);\n    this.displayedAreas.push(...areas);\n\n    this.build(true, true);\n  }\n\n  public hideArea(comp: SplitAreaDirective): void {\n    const area = this.displayedAreas.find((a) => a.component === comp);\n    if (area === undefined) {\n      return;\n    }\n\n    const areas = this.displayedAreas.splice(\n      this.displayedAreas.indexOf(area),\n      1\n    );\n    areas.forEach((area) => {\n      area.order = 0;\n      area.size = 0;\n    });\n    this.hidedAreas.push(...areas);\n\n    this.build(true, true);\n  }\n\n  public getVisibleAreaSizes(): IOutputAreaSizes {\n    return this.displayedAreas.map((a) => (a.size === null ? '*' : a.size));\n  }\n\n  public setVisibleAreaSizes(sizes: IOutputAreaSizes): boolean {\n    if (sizes.length !== this.displayedAreas.length) {\n      return false;\n    }\n\n    const formatedSizes = sizes.map((s) => getInputPositiveNumber(s, null));\n    const isValid = isUserSizesValid(this.unit, formatedSizes);\n\n    if (isValid === false) {\n      return false;\n    }\n\n    // @ts-ignore\n    this.displayedAreas.forEach(\n      (area, i) => (area.component.size = formatedSizes[i])\n    );\n\n    this.build(false, true);\n    return true;\n  }\n\n  private build(resetOrders: boolean, resetSizes: boolean): void {\n    this.stopDragging();\n\n    // ¤ AREAS ORDER\n\n    if (resetOrders === true) {\n      // If user provided 'order' for each area, use it to sort them.\n      if (this.displayedAreas.every((a) => a.component.order !== null)) {\n        this.displayedAreas.sort(\n          (a, b) => <number>a.component.order - <number>b.component.order\n        );\n      }\n\n      // Then set real order with multiples of 2, numbers between will be used by gutters.\n      this.displayedAreas.forEach((area, i) => {\n        area.order = i * 2;\n        area.component.setStyleOrder(area.order);\n      });\n    }\n\n    // ¤ AREAS SIZE\n\n    if (resetSizes === true) {\n      const useUserSizes = isUserSizesValid(\n        this.unit,\n        this.displayedAreas.map((a) => a.component.size)\n      );\n\n      switch (this.unit) {\n        case 'percent': {\n          const defaultSize = 100 / this.displayedAreas.length;\n\n          this.displayedAreas.forEach((area) => {\n            area.size = useUserSizes\n              ? <number>area.component.size\n              : defaultSize;\n            area.minSize = getAreaMinSize(area);\n            area.maxSize = getAreaMaxSize(area);\n          });\n          break;\n        }\n        case 'pixel': {\n          if (useUserSizes) {\n            this.displayedAreas.forEach((area) => {\n              area.size = area.component.size;\n              area.minSize = getAreaMinSize(area);\n              area.maxSize = getAreaMaxSize(area);\n            });\n          } else {\n            const wildcardSizeAreas = this.displayedAreas.filter(\n              (a) => a.component.size === null\n            );\n\n            // No wildcard area > Need to select one arbitrarily > first\n            if (\n              wildcardSizeAreas.length === 0 &&\n              this.displayedAreas.length > 0\n            ) {\n              this.displayedAreas.forEach((area, i) => {\n                area.size = i === 0 ? null : area.component.size;\n                area.minSize = i === 0 ? null : getAreaMinSize(area);\n                area.maxSize = i === 0 ? null : getAreaMaxSize(area);\n              });\n            }\n            // More than one wildcard area > Need to keep only one arbitrarly > first\n            else if (wildcardSizeAreas.length > 1) {\n              let alreadyGotOne = false;\n              this.displayedAreas.forEach((area) => {\n                if (area.component.size === null) {\n                  if (alreadyGotOne === false) {\n                    area.size = null;\n                    area.minSize = null;\n                    area.maxSize = null;\n                    alreadyGotOne = true;\n                  } else {\n                    area.size = 100;\n                    area.minSize = null;\n                    area.maxSize = null;\n                  }\n                } else {\n                  area.size = area.component.size;\n                  area.minSize = getAreaMinSize(area);\n                  area.maxSize = getAreaMaxSize(area);\n                }\n              });\n            }\n          }\n          break;\n        }\n      }\n    }\n\n    this.refreshStyleSizes();\n    this.cdRef.markForCheck();\n  }\n\n  private refreshStyleSizes(): void {\n    ///////////////////////////////////////////\n    // PERCENT MODE\n    if (this.unit === 'percent') {\n      // Only one area > flex-basis 100%\n      if (this.displayedAreas.length === 1) {\n        this.displayedAreas[0].component.setStyleFlex(\n          0,\n          0,\n          `100%`,\n          false,\n          false\n        );\n      }\n      // Multiple areas > use each percent basis\n      else {\n        const sumGutterSize = this.getNbGutters() * this.gutterSize;\n\n        this.displayedAreas.forEach((area) => {\n          area.component.setStyleFlex(\n            0,\n            0,\n            `calc( ${area.size}% - ${\n              (<number>area.size / 100) * sumGutterSize\n            }px )`,\n            area.minSize !== null && area.minSize === area.size ? true : false,\n            area.maxSize !== null && area.maxSize === area.size ? true : false\n          );\n        });\n      }\n    }\n    ///////////////////////////////////////////\n    // PIXEL MODE\n    else if (this.unit === 'pixel') {\n      this.displayedAreas.forEach((area) => {\n        // Area with wildcard size\n        if (area.size === null) {\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(1, 1, `100%`, false, false);\n          } else {\n            area.component.setStyleFlex(1, 1, `auto`, false, false);\n          }\n        }\n        // Area with pixel size\n        else {\n          // Only one area > flex-basis 100%\n          if (this.displayedAreas.length === 1) {\n            area.component.setStyleFlex(0, 0, `100%`, false, false);\n          }\n          // Multiple areas > use each pixel basis\n          else {\n            area.component.setStyleFlex(\n              0,\n              0,\n              `${area.size}px`,\n              area.minSize !== null && area.minSize === area.size\n                ? true\n                : false,\n              area.maxSize !== null && area.maxSize === area.size ? true : false\n            );\n          }\n        }\n      });\n    }\n  }\n\n  _clickTimeout: number | null = null;\n\n  public clickGutter(event: MouseEvent | TouchEvent, gutterNum: number): void {\n    const tempPoint = getPointFromEvent(event);\n\n    // Be sure mouseup/touchend happened at same point as mousedown/touchstart to trigger click/dblclick\n    if (\n      this.startPoint &&\n      this.startPoint.x === tempPoint.x &&\n      this.startPoint.y === tempPoint.y\n    ) {\n      // If timeout in progress and new click > clearTimeout & dblClickEvent\n      if (this._clickTimeout !== null) {\n        window.clearTimeout(this._clickTimeout);\n        this._clickTimeout = null;\n        this.notify('dblclick', gutterNum);\n        this.stopDragging();\n      }\n      // Else start timeout to call clickEvent at end\n      else {\n        this._clickTimeout = window.setTimeout(() => {\n          this._clickTimeout = null;\n          this.notify('click', gutterNum);\n          this.stopDragging();\n        }, this.gutterDblClickDuration);\n      }\n    }\n  }\n\n  public startDragging(\n    event: MouseEvent | TouchEvent,\n    gutterOrder: number,\n    gutterNum: number\n  ): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.startPoint = getPointFromEvent(event);\n    if (this.startPoint === null || this.disabled === true) {\n      return;\n    }\n\n    this.snapshot = {\n      gutterNum,\n      lastSteppedOffset: 0,\n      allAreasSizePixel:\n        getElementPixelSize(this.elRef, this.direction) -\n        this.getNbGutters() * this.gutterSize,\n      allInvolvedAreasSizePercent: 100,\n      areasBeforeGutter: [],\n      areasAfterGutter: [],\n    };\n\n    this.displayedAreas.forEach((area) => {\n      const areaSnapshot: IAreaSnapshot = {\n        area,\n        sizePixelAtStart: getElementPixelSize(\n          area.component.elRef,\n          this.direction\n        ),\n        sizePercentAtStart: this.unit === 'percent' ? area.size : -1, // If pixel mode, anyway, will not be used.\n      };\n\n      if (area.order < gutterOrder) {\n        if (this.restrictMove === true) {\n          this.snapshot.areasBeforeGutter = [areaSnapshot];\n        } else {\n          this.snapshot.areasBeforeGutter.unshift(areaSnapshot);\n        }\n      } else if (area.order > gutterOrder) {\n        if (this.restrictMove === true) {\n          if (this.snapshot.areasAfterGutter.length === 0)\n            this.snapshot.areasAfterGutter = [areaSnapshot];\n        } else {\n          this.snapshot.areasAfterGutter.push(areaSnapshot);\n        }\n      }\n    });\n\n    this.snapshot.allInvolvedAreasSizePercent = [\n      ...this.snapshot.areasBeforeGutter,\n      ...this.snapshot.areasAfterGutter,\n    ].reduce((t, a) => t + a.sizePercentAtStart, 0);\n\n    if (\n      this.snapshot.areasBeforeGutter.length === 0 ||\n      this.snapshot.areasAfterGutter.length === 0\n    ) {\n      return;\n    }\n\n    this.dragListeners.push(\n      this.renderer.listen('document', 'mouseup', this.stopDragging.bind(this))\n    );\n    this.dragListeners.push(\n      this.renderer.listen('document', 'touchend', this.stopDragging.bind(this))\n    );\n    this.dragListeners.push(\n      this.renderer.listen(\n        'document',\n        'touchcancel',\n        this.stopDragging.bind(this)\n      )\n    );\n\n    this.ngZone.runOutsideAngular(() => {\n      this.dragListeners.push(\n        this.renderer.listen('document', 'mousemove', this.dragEvent.bind(this))\n      );\n      this.dragListeners.push(\n        this.renderer.listen('document', 'touchmove', this.dragEvent.bind(this))\n      );\n    });\n\n    this.displayedAreas.forEach((area) => area.component.lockEvents());\n\n    this.isDragging = true;\n    this.renderer.addClass(this.elRef.nativeElement, 'ngx-dragging');\n    this.renderer.addClass(\n      this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement,\n      'ngx-dragged'\n    );\n\n    this.notify('start', this.snapshot.gutterNum);\n  }\n\n  private dragEvent(event: MouseEvent | TouchEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this._clickTimeout !== null) {\n      window.clearTimeout(this._clickTimeout);\n      this._clickTimeout = null;\n    }\n\n    if (this.isDragging === false) {\n      return;\n    }\n\n    this.endPoint = getPointFromEvent(event);\n    if (this.endPoint === null) {\n      return;\n    }\n\n    // Calculate steppedOffset\n\n    let offset =\n      this.direction === 'horizontal'\n        ? this.startPoint.x - this.endPoint.x\n        : this.startPoint.y - this.endPoint.y;\n    if (this.dir === 'rtl') {\n      offset = -offset;\n    }\n    const steppedOffset =\n      Math.round(offset / this.gutterStep) * this.gutterStep;\n\n    if (steppedOffset === this.snapshot.lastSteppedOffset) {\n      return;\n    }\n\n    this.snapshot.lastSteppedOffset = steppedOffset;\n\n    // Need to know if each gutter side areas could reacts to steppedOffset\n\n    let areasBefore = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot.areasBeforeGutter,\n      -steppedOffset,\n      this.snapshot.allAreasSizePixel\n    );\n    let areasAfter = getGutterSideAbsorptionCapacity(\n      this.unit,\n      this.snapshot.areasAfterGutter,\n      steppedOffset,\n      this.snapshot.allAreasSizePixel\n    );\n\n    // Each gutter side areas can't absorb all offset\n    if (areasBefore.remain !== 0 && areasAfter.remain !== 0) {\n      if (Math.abs(areasBefore.remain) === Math.abs(areasAfter.remain)) {\n      } else if (Math.abs(areasBefore.remain) > Math.abs(areasAfter.remain)) {\n        areasAfter = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot.areasAfterGutter,\n          steppedOffset + areasBefore.remain,\n          this.snapshot.allAreasSizePixel\n        );\n      } else {\n        areasBefore = getGutterSideAbsorptionCapacity(\n          this.unit,\n          this.snapshot.areasBeforeGutter,\n          -(steppedOffset - areasAfter.remain),\n          this.snapshot.allAreasSizePixel\n        );\n      }\n    }\n    // Areas before gutter can't absorbs all offset > need to recalculate sizes for areas after gutter.\n    else if (areasBefore.remain !== 0) {\n      areasAfter = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot.areasAfterGutter,\n        steppedOffset + areasBefore.remain,\n        this.snapshot.allAreasSizePixel\n      );\n    }\n    // Areas after gutter can't absorbs all offset > need to recalculate sizes for areas before gutter.\n    else if (areasAfter.remain !== 0) {\n      areasBefore = getGutterSideAbsorptionCapacity(\n        this.unit,\n        this.snapshot.areasBeforeGutter,\n        -(steppedOffset - areasAfter.remain),\n        this.snapshot.allAreasSizePixel\n      );\n    }\n\n    if (this.unit === 'percent') {\n      // Hack because of browser messing up with sizes using calc(X% - Ypx) -> el.getBoundingClientRect()\n      // If not there, playing with gutters makes total going down to 99.99875% then 99.99286%, 99.98986%,..\n      const all = [...areasBefore.list, ...areasAfter.list];\n      const areaToReset = all.find(\n        (a) =>\n          a.percentAfterAbsorption !== 0 &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.minSize &&\n          a.percentAfterAbsorption !== a.areaSnapshot.area.maxSize\n      );\n\n      if (areaToReset) {\n        areaToReset.percentAfterAbsorption =\n          this.snapshot.allInvolvedAreasSizePercent -\n          all\n            .filter((a) => a !== areaToReset)\n            .reduce((total, a) => total + a.percentAfterAbsorption, 0);\n      }\n    }\n\n    // Now we know areas could absorb steppedOffset, time to really update sizes\n\n    areasBefore.list.forEach((item) => updateAreaSize(this.unit, item));\n    areasAfter.list.forEach((item) => updateAreaSize(this.unit, item));\n\n    this.refreshStyleSizes();\n    this.notify('progress', this.snapshot.gutterNum);\n  }\n\n  private stopDragging(event?: Event): void {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    if (this.isDragging === false) {\n      return;\n    }\n\n    this.displayedAreas.forEach((area) => area.component.unlockEvents());\n\n    while (this.dragListeners.length > 0) {\n      const fct = this.dragListeners.pop();\n      if (fct) fct();\n    }\n\n    // Warning: Have to be before \"notify('end')\"\n    // because \"notify('end')\"\" can be linked to \"[size]='x'\" > \"build()\" > \"stopDragging()\"\n    this.isDragging = false;\n\n    // If moved from starting point, notify end\n    if (\n      this.endPoint &&\n      (this.startPoint.x !== this.endPoint.x ||\n        this.startPoint.y !== this.endPoint.y)\n    ) {\n      this.notify('end', this.snapshot.gutterNum);\n    }\n\n    this.renderer.removeClass(this.elRef.nativeElement, 'ngx-dragging');\n    this.renderer.removeClass(\n      this.gutterEls.toArray()[this.snapshot.gutterNum - 1].nativeElement,\n      'ngx-dragged'\n    );\n    this.snapshot = null;\n\n    // Needed to let (click)=\"clickGutter(...)\" event run and verify if mouse moved or not\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => {\n        this.startPoint = null;\n        this.endPoint = null;\n      });\n    });\n  }\n\n  public notify(\n    type: 'start' | 'progress' | 'end' | 'click' | 'dblclick' | 'transitionEnd',\n    gutterNum: number\n  ): void {\n    const sizes = this.getVisibleAreaSizes();\n\n    if (type === 'start') {\n      this.dragStart.emit({ gutterNum, sizes });\n    } else if (type === 'end') {\n      this.dragEnd.emit({ gutterNum, sizes });\n    } else if (type === 'click') {\n      this.gutterClick.emit({ gutterNum, sizes });\n    } else if (type === 'dblclick') {\n      this.gutterDblClick.emit({ gutterNum, sizes });\n    } else if (type === 'transitionEnd') {\n      if (this.transitionEndSubscriber) {\n        this.ngZone.run(() => this.transitionEndSubscriber.next(sizes));\n      }\n    } else if (type === 'progress') {\n      // Stay outside zone to allow users do what they want about change detection mechanism.\n      this.dragProgressSubject.next({ gutterNum, sizes });\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.stopDragging();\n  }\n}\n","import {\n  Directive,\n  Input,\n  ElementRef,\n  Renderer2,\n  OnInit,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\n\nimport { SplitComponent } from '../component/split.component';\nimport { getInputPositiveNumber, getInputBoolean } from '../utils';\n\n@Directive({\n  selector: 'ngx-split-area, [ngx-split-area]',\n  exportAs: 'ngxSplitArea',\n})\nexport class SplitAreaDirective implements OnInit, OnDestroy {\n  private _order: number | null = null;\n\n  @Input() set order(v: number | null) {\n    this._order = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, true, false);\n  }\n\n  get order(): number | null {\n    return this._order;\n  }\n\n  ////\n\n  private _size: number | null = null;\n\n  @Input() set size(v: number | null) {\n    this._size = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get size(): number | null {\n    return this._size;\n  }\n\n  ////\n\n  private _minSize: number | null = null;\n\n  @Input() set minSize(v: number | null) {\n    this._minSize = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get minSize(): number | null {\n    return this._minSize;\n  }\n\n  ////\n\n  private _maxSize: number | null = null;\n\n  @Input() set maxSize(v: number | null) {\n    this._maxSize = getInputPositiveNumber(v, null);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get maxSize(): number | null {\n    return this._maxSize;\n  }\n\n  ////\n\n  private _lockSize: boolean = false;\n\n  @Input() set lockSize(v: boolean) {\n    this._lockSize = getInputBoolean(v);\n\n    this.split.updateArea(this, false, true);\n  }\n\n  get lockSize(): boolean {\n    return this._lockSize;\n  }\n\n  ////\n\n  private _visible: boolean = true;\n\n  @Input() set visible(v: boolean) {\n    this._visible = getInputBoolean(v);\n\n    if (this._visible) {\n      this.split.showArea(this);\n      this.renderer.removeClass(this.elRef.nativeElement, 'ngx-hidden');\n    } else {\n      this.split.hideArea(this);\n      this.renderer.addClass(this.elRef.nativeElement, 'ngx-hidden');\n    }\n  }\n\n  get visible(): boolean {\n    return this._visible;\n  }\n\n  ////\n\n  private transitionListener: Function;\n  private readonly lockListeners: Array<Function> = [];\n\n  constructor(\n    private ngZone: NgZone,\n    public elRef: ElementRef,\n    private renderer: Renderer2,\n    private split: SplitComponent\n  ) {\n    this.renderer.addClass(this.elRef.nativeElement, 'ngx-split-area');\n  }\n\n  public ngOnInit(): void {\n    this.split.addArea(this);\n\n    this.ngZone.runOutsideAngular(() => {\n      this.transitionListener = this.renderer.listen(\n        this.elRef.nativeElement,\n        'transitionend',\n        (event: TransitionEvent) => {\n          // Limit only flex-basis transition to trigger the event\n          if (event.propertyName === 'flex-basis') {\n            this.split.notify('transitionEnd', -1);\n          }\n        }\n      );\n    });\n  }\n\n  public setStyleOrder(value: number): void {\n    this.renderer.setStyle(this.elRef.nativeElement, 'order', value);\n  }\n\n  public setStyleFlex(\n    grow: number,\n    shrink: number,\n    basis: string,\n    isMin: boolean,\n    isMax: boolean\n  ): void {\n    // Need 3 separated properties to work on IE11 (https://github.com/angular/flex-layout/issues/323)\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-grow', grow);\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-shrink', shrink);\n    this.renderer.setStyle(this.elRef.nativeElement, 'flex-basis', basis);\n\n    if (isMin === true)\n      this.renderer.addClass(this.elRef.nativeElement, 'ngx-min');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'ngx-min');\n\n    if (isMax === true)\n      this.renderer.addClass(this.elRef.nativeElement, 'ngx-max');\n    else this.renderer.removeClass(this.elRef.nativeElement, 'ngx-max');\n  }\n\n  public lockEvents(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this.lockListeners.push(\n        this.renderer.listen(\n          this.elRef.nativeElement,\n          'selectstart',\n          (e: Event) => false\n        )\n      );\n      this.lockListeners.push(\n        this.renderer.listen(\n          this.elRef.nativeElement,\n          'dragstart',\n          (e: Event) => false\n        )\n      );\n    });\n  }\n\n  public unlockEvents(): void {\n    while (this.lockListeners.length > 0) {\n      const fct = this.lockListeners.pop();\n      if (fct) fct();\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.unlockEvents();\n\n    if (this.transitionListener) {\n      this.transitionListener();\n    }\n\n    this.split.removeArea(this);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SplitComponent } from './component/split.component';\nimport { SplitAreaDirective } from './directive/splitArea.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [SplitComponent, SplitAreaDirective],\n  exports: [SplitComponent, SplitAreaDirective],\n})\nexport class NgxSplitModule {\n  public static forRoot(): ModuleWithProviders<NgxSplitModule> {\n    return {\n      ngModule: NgxSplitModule,\n      providers: [],\n    };\n  }\n\n  public static forChild(): ModuleWithProviders<NgxSplitModule> {\n    return {\n      ngModule: NgxSplitModule,\n      providers: [],\n    };\n  }\n}\n","import { ElementRef } from '@angular/core';\n\nimport {\n  IArea,\n  IPoint,\n  IAreaSnapshot,\n  ISplitSideAbsorptionCapacity,\n  IAreaAbsorptionCapacity,\n} from './interface';\n\nexport function getPointFromEvent(event: MouseEvent | TouchEvent): IPoint {\n  // TouchEvent\n  if (\n    (<TouchEvent>event).changedTouches !== undefined &&\n    (<TouchEvent>event).changedTouches.length > 0\n  ) {\n    return {\n      x: (<TouchEvent>event).changedTouches[0].clientX,\n      y: (<TouchEvent>event).changedTouches[0].clientY,\n    };\n  }\n  // MouseEvent\n  else if (\n    (<MouseEvent>event).clientX !== undefined &&\n    (<MouseEvent>event).clientY !== undefined\n  ) {\n    return {\n      x: (<MouseEvent>event).clientX,\n      y: (<MouseEvent>event).clientY,\n    };\n  }\n  return null;\n}\n\nexport function getElementPixelSize(\n  elRef: ElementRef,\n  direction: 'horizontal' | 'vertical'\n): number {\n  const rect = (<HTMLElement>elRef.nativeElement).getBoundingClientRect();\n\n  return direction === 'horizontal' ? rect.width : rect.height;\n}\n\nexport function getInputBoolean(v: any): boolean {\n  return typeof v === 'boolean' ? v : v === 'false' ? false : true;\n}\n\nexport function getInputPositiveNumber<T>(v: any, defaultValue: T): number | T {\n  if (v === null || v === undefined) return defaultValue;\n\n  v = Number(v);\n  return !isNaN(v) && v >= 0 ? v : defaultValue;\n}\n\nexport function isUserSizesValid(\n  unit: 'percent' | 'pixel',\n  sizes: Array<number | null>\n): boolean {\n  // All sizes have to be not null and total should be 100\n  if (unit === 'percent') {\n    const total = sizes.reduce(\n      (total, s) => (s !== null ? total + s : total),\n      0\n    );\n    return sizes.every((s) => s !== null) && total > 99.9 && total < 100.1;\n  }\n\n  // A size at null is mandatory but only one.\n  if (unit === 'pixel') {\n    return sizes.filter((s) => s === null).length === 1;\n  }\n}\n\nexport function getAreaMinSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null;\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size;\n  }\n\n  if (a.component.minSize === null) {\n    return null;\n  }\n\n  if (a.component.minSize > a.size) {\n    return a.size;\n  }\n\n  return a.component.minSize;\n}\n\nexport function getAreaMaxSize(a: IArea): null | number {\n  if (a.size === null) {\n    return null;\n  }\n\n  if (a.component.lockSize === true) {\n    return a.size;\n  }\n\n  if (a.component.maxSize === null) {\n    return null;\n  }\n\n  if (a.component.maxSize < a.size) {\n    return a.size;\n  }\n\n  return a.component.maxSize;\n}\n\nexport function getGutterSideAbsorptionCapacity(\n  unit: 'percent' | 'pixel',\n  sideAreas: Array<IAreaSnapshot>,\n  pixels: number,\n  allAreasSizePixel: number\n): ISplitSideAbsorptionCapacity {\n  return sideAreas.reduce(\n    (acc, area) => {\n      const res = getAreaAbsorptionCapacity(\n        unit,\n        area,\n        acc.remain,\n        allAreasSizePixel\n      );\n      acc.list.push(res);\n      acc.remain = res.pixelRemain;\n      return acc;\n    },\n    { remain: pixels, list: [] }\n  );\n}\n\nfunction getAreaAbsorptionCapacity(\n  unit: 'percent' | 'pixel',\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number\n): IAreaAbsorptionCapacity {\n  // No pain no gain\n  if (pixels === 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: areaSnapshot.sizePercentAtStart,\n      pixelRemain: 0,\n    };\n  }\n\n  // Area start at zero and need to be reduced, not possible\n  if (areaSnapshot.sizePixelAtStart === 0 && pixels < 0) {\n    return {\n      areaSnapshot,\n      pixelAbsorb: 0,\n      percentAfterAbsorption: 0,\n      pixelRemain: pixels,\n    };\n  }\n\n  if (unit === 'percent') {\n    return getAreaAbsorptionCapacityPercent(\n      areaSnapshot,\n      pixels,\n      allAreasSizePixel\n    );\n  }\n\n  if (unit === 'pixel') {\n    return getAreaAbsorptionCapacityPixel(\n      areaSnapshot,\n      pixels,\n      allAreasSizePixel\n    );\n  }\n}\n\nfunction getAreaAbsorptionCapacityPercent(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  allAreasSizePixel: number\n): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\n  const tempPercentSize = (tempPixelSize / allAreasSizePixel) * 100;\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (\n      areaSnapshot.area.maxSize !== null &&\n      tempPercentSize > areaSnapshot.area.maxSize\n    ) {\n      // Use area.area.maxSize as newPercentSize and return calculate pixels remaining\n      const maxSizePixel =\n        (areaSnapshot.area.maxSize / 100) * allAreasSizePixel;\n      return {\n        areaSnapshot,\n        pixelAbsorb: maxSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.maxSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - maxSizePixel,\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize > 100 ? 100 : tempPercentSize,\n      pixelRemain: 0,\n    };\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (\n      areaSnapshot.area.minSize !== null &&\n      tempPercentSize < areaSnapshot.area.minSize\n    ) {\n      // Use area.area.minSize as newPercentSize and return calculate pixels remaining\n      const minSizePixel =\n        (areaSnapshot.area.minSize / 100) * allAreasSizePixel;\n      return {\n        areaSnapshot,\n        pixelAbsorb: minSizePixel,\n        percentAfterAbsorption: areaSnapshot.area.minSize,\n        pixelRemain: areaSnapshot.sizePixelAtStart + pixels - minSizePixel,\n      };\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPercentSize < 0) {\n      // Use 0 as newPercentSize and return calculate pixels remaining\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: 0,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: tempPercentSize,\n      pixelRemain: 0,\n    };\n  }\n}\n\nfunction getAreaAbsorptionCapacityPixel(\n  areaSnapshot: IAreaSnapshot,\n  pixels: number,\n  containerSizePixel: number\n): IAreaAbsorptionCapacity {\n  const tempPixelSize = areaSnapshot.sizePixelAtStart + pixels;\n\n  // ENLARGE AREA\n\n  if (pixels > 0) {\n    // If maxSize & newSize bigger than it > absorb to max and return remaining pixels\n    if (\n      areaSnapshot.area.maxSize !== null &&\n      tempPixelSize > areaSnapshot.area.maxSize\n    ) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.maxSize - areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.maxSize,\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    };\n  }\n\n  // REDUCE AREA\n  else if (pixels < 0) {\n    // If minSize & newSize smaller than it > absorb to min and return remaining pixels\n    if (\n      areaSnapshot.area.minSize !== null &&\n      tempPixelSize < areaSnapshot.area.minSize\n    ) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: areaSnapshot.area.minSize + pixels - tempPixelSize,\n        percentAfterAbsorption: -1,\n        pixelRemain: tempPixelSize - areaSnapshot.area.minSize,\n      };\n    }\n    // If reduced under zero > return remaining pixels\n    else if (tempPixelSize < 0) {\n      return {\n        areaSnapshot,\n        pixelAbsorb: -areaSnapshot.sizePixelAtStart,\n        percentAfterAbsorption: -1,\n        pixelRemain: pixels + areaSnapshot.sizePixelAtStart,\n      };\n    }\n    return {\n      areaSnapshot,\n      pixelAbsorb: pixels,\n      percentAfterAbsorption: -1,\n      pixelRemain: 0,\n    };\n  }\n}\n\nexport function updateAreaSize(\n  unit: 'percent' | 'pixel',\n  item: IAreaAbsorptionCapacity\n) {\n  if (unit === 'percent') {\n    item.areaSnapshot.area.size = item.percentAfterAbsorption;\n  } else if (unit === 'pixel') {\n    // Update size except for the wildcard size area\n    if (item.areaSnapshot.area.size !== null) {\n      item.areaSnapshot.area.size =\n        item.areaSnapshot.sizePixelAtStart + item.pixelAbsorb;\n    }\n  }\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <ui-topbar></ui-topbar>\n    <div>\n      <router-outlet></router-outlet>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n      :host > div {\n        padding-top: 54px;\n        width: 100%;\n        height: 100%;\n      }\n    `,\n  ],\n})\nexport class AppComponent {\n  constructor(public router: Router) {\n    this.router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event) => {\n        window.scrollTo(0, 0);\n      });\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { routes } from './app.routes';\nimport { UiModule } from './ui/ui.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    UiModule,\n    RouterModule.forRoot(routes, { initialNavigation: 'enabled' }),\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export const routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./pages/home/home.module').then((m) => m.HomeModule),\n  },\n  {\n    path: '',\n    loadChildren: () =>\n      import('./pages/examples/examples.module').then((m) => m.ExamplesModule),\n  },\n  {\n    path: 'changelog',\n    loadChildren: () =>\n      import('./pages/changelog/changelog.module').then(\n        (m) => m.ChangelogModule\n      ),\n  },\n  {\n    path: 'documentation',\n    loadChildren: () =>\n      import('./pages/documentation/documentation.module').then(\n        (m) => m.DocumentationModule\n      ),\n  },\n];\n","export enum ExampleEnum {\n  SIMPLE = 'simple',\n  MINMAX = 'minmax',\n  NESTED = 'nested',\n  IFRAME = 'iframe',\n  TRANSITION = 'transition',\n  SYNC = 'sync',\n  STYLE = 'style',\n  TOGGLE = 'toggle',\n  CLICK = 'click',\n  CODE = 'code',\n  GEEK = 'geek',\n  DIR = 'dir',\n  WORKSPACE = 'workspace',\n}\n","import { ExampleEnum } from './example-enum';\nimport { IExampleData } from './interfaces/example-data';\n\nimport { ClassAccessComponent } from './pages/examples/component/class-access.component';\nimport { CustomGutterStyleComponent } from './pages/examples/component/custom-gutter-style.component';\nimport { DirRtlComponent } from './pages/examples/component/dir-rtl.component';\nimport { GeekDemoComponent } from './pages/examples/component/geek-demo.component';\nimport { GutterClickComponent } from './pages/examples/component/gutter-click.component';\nimport { IframeComponent } from './pages/examples/component/iframe.component';\nimport { MinMaxComponent } from './pages/examples/component/min-max.component';\nimport { NestedComponent } from './pages/examples/component/nested.component';\nimport { SimpleComponent } from './pages/examples/component/simple.component';\nimport { SyncComponent } from './pages/examples/component/sync.component';\nimport { TogglingDomAndVisibleComponent } from './pages/examples/component/toggling-dom-and-visible.component';\nimport { TransitionsComponent } from './pages/examples/component/transitions.component';\nimport { WorkspaceLocalstorageComponent } from './pages/examples/component/workspace-localstorage.component';\n\nconst srcUrlBase = 'https://github.com/beeman/ngx-split/blob/main/';\nconst srcUrlBaseApp = `${srcUrlBase}apps/demo/src/app/pages/examples/component/`;\n\nexport const examples: Array<IExampleData> = [\n  {\n    type: ExampleEnum.SIMPLE,\n    path: 'examples/simple-split',\n    component: SimpleComponent,\n    label: 'Simple split',\n    srcUrl: `${srcUrlBaseApp}simple.component.ts`,\n  },\n  {\n    type: ExampleEnum.MINMAX,\n    path: 'examples/min-max-split',\n    component: MinMaxComponent,\n    label: 'Split with minSize & maxSize',\n    srcUrl: `${srcUrlBaseApp}min-max.component.ts`,\n  },\n  {\n    type: ExampleEnum.NESTED,\n    path: 'examples/nested-split',\n    component: NestedComponent,\n    label: 'Nested splits',\n    srcUrl: `${srcUrlBaseApp}nested.component.ts`,\n  },\n  {\n    type: ExampleEnum.IFRAME,\n    path: 'examples/iframes',\n    component: IframeComponent,\n    label: 'Split containing iframes',\n    srcUrl: `${srcUrlBaseApp}iframe.component.ts`,\n  },\n  {\n    type: ExampleEnum.TRANSITION,\n    path: 'examples/split-transitons',\n    component: TransitionsComponent,\n    label: 'Split with transitions',\n    srcUrl: `${srcUrlBaseApp}transitions.component.ts`,\n  },\n  {\n    type: ExampleEnum.SYNC,\n    path: 'examples/sync-split',\n    component: SyncComponent,\n    label: 'Split synchronized',\n    srcUrl: `${srcUrlBaseApp}sync.component.ts`,\n  },\n  {\n    type: ExampleEnum.STYLE,\n    path: 'examples/custom-gutter-style',\n    component: CustomGutterStyleComponent,\n    label: 'Split with custom gutter style',\n    srcUrl: `${srcUrlBaseApp}custom-gutter-style.component.ts`,\n  },\n  {\n    type: ExampleEnum.TOGGLE,\n    path: 'examples/toggling-dom-and-visibility',\n    component: TogglingDomAndVisibleComponent,\n    label: 'Toggling areas using <code>[visible]</code> and <code>*ngIf</code>',\n    srcUrl: `${srcUrlBaseApp}toggling-dom-and-visible.component.ts`,\n  },\n  {\n    type: ExampleEnum.CLICK,\n    path: 'examples/gutter-click-roll-unroll',\n    component: GutterClickComponent,\n    label: 'Roll/unroll area on <code>(gutterClick)</code> event',\n    srcUrl: `${srcUrlBaseApp}gutter-click.component.ts`,\n  },\n  {\n    type: ExampleEnum.CODE,\n    path: 'examples/access-from-class',\n    component: ClassAccessComponent,\n    label: 'Access and interact <code>SplitComponent</code> from TS class',\n    srcUrl: `${srcUrlBaseApp}class-access.component.ts`,\n  },\n  {\n    type: ExampleEnum.GEEK,\n    path: 'examples/geek-demo',\n    component: GeekDemoComponent,\n    label: 'Geek demo (100% dynamic)',\n    srcUrl: `${srcUrlBaseApp}geek-demo.component.ts`,\n  },\n  {\n    type: ExampleEnum.DIR,\n    path: 'examples/dir-rtl',\n    component: DirRtlComponent,\n    label: 'Split inside right to left (RTL) page',\n    srcUrl: `${srcUrlBaseApp}dir-rtl.component.ts`,\n  },\n  {\n    type: ExampleEnum.WORKSPACE,\n    path: 'examples/workspace-localstorage',\n    component: WorkspaceLocalstorageComponent,\n    label: 'Fullscreen workspace saved in localStorage',\n    srcUrl: `${srcUrlBaseApp}workspace-localstorage.component.ts`,\n  },\n];\n","import { ExampleEnum } from '../../../example-enum';\nimport { formatDate } from '../format-date';\n\nexport class AComponent {\n  exampleEnum = ExampleEnum;\n\n  testChangeDetectorRun() {\n    console.log(\n      `${formatDate(new Date())} > AComponent.ts - Change detection just run!`\n    );\n\n    return '';\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { SplitComponent, SplitAreaDirective } from 'ngx-split';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      .btns {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-around;\n      }\n      .btns > div {\n        margin-bottom: 10px;\n      }\n    `,\n  ],\n  template: ` <div class=\"container\">\n    <ui-example-title [type]=\"exampleEnum.CODE\"></ui-example-title>\n    <div class=\"split-example\">\n      <ngx-split>\n        <ngx-split-area [size]=\"75\">\n          <p>\n            Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n            accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n            quae ab illo inventore veritatis et quasi architecto beatae vitae\n            dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n            aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n            eodolor sit amet, consectetur, adipisci velit, sed quia non numquam\n            eius modi tempora incidunt ut labore et dolore magnam aliquam\n            quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n            exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid\n            ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui\n            in ea voluptate velit esse quam nihil molestiae consequatur, vel\n            illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n          </p>\n        </ngx-split-area>\n        <ngx-split-area [size]=\"3\">\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur.\n          </p>\n        </ngx-split-area>\n        <ngx-split-area [visible]=\"false\" [size]=\"18\">\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur.\n          </p>\n        </ngx-split-area>\n        <ngx-split-area [size]=\"4\">\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur.\n          </p>\n        </ngx-split-area>\n      </ngx-split>\n    </div>\n    <br />\n    <div class=\"btns\">\n      <div>\n        <button\n          class=\"btn btn-warning\"\n          (click)=\"\n            splitEl.direction =\n              splitEl.direction === 'horizontal' ? 'vertical' : 'horizontal'\n          \"\n        >\n          {{ 'Toggle direction: \"' + splitEl.direction + '\"' }}\n        </button>\n      </div>\n      <div>\n        <button\n          class=\"btn btn-warning\"\n          [class.active]=\"!splitEl.disabled\"\n          (click)=\"splitEl.disabled = !splitEl.disabled\"\n        >\n          {{ 'splitEl.disabled: ' + splitEl.disabled }}\n        </button>\n      </div>\n      <div>\n        <button\n          class=\"btn btn-warning\"\n          (click)=\"splitEl.dir = splitEl.dir === 'rtl' ? 'ltr' : 'rtl'\"\n        >\n          {{ 'splitEl.dir: \"' + splitEl.dir + '\"' }}\n        </button>\n      </div>\n      <div>\n        <label>Gutter size: </label>\n        <div class=\"btn-group\">\n          <label\n            class=\"btn btn-warning btn-sm\"\n            (click)=\"splitEl.gutterSize = null\"\n            [class.active]=\"splitEl.gutterSize === 11\"\n            >null</label\n          >\n          <label\n            class=\"btn btn-warning btn-sm\"\n            (click)=\"splitEl.gutterSize = 7\"\n            [class.active]=\"splitEl.gutterSize === 7\"\n            >7</label\n          >\n          <label\n            class=\"btn btn-warning btn-sm\"\n            (click)=\"splitEl.gutterSize = 22\"\n            [class.active]=\"splitEl.gutterSize === 22\"\n            >22</label\n          >\n        </div>\n      </div>\n    </div>\n  </div>`,\n})\nexport class ClassAccessComponent extends AComponent implements AfterViewInit {\n  @ViewChild(SplitComponent, { static: false }) splitEl: SplitComponent;\n  @ViewChildren(SplitAreaDirective) areasEl: QueryList<SplitAreaDirective>;\n\n  ngAfterViewInit() {\n    console.log('Area Components: ', this.areasEl);\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styleUrls: [`./custom-gutter-style.component.scss`],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.STYLE\"></ui-example-title>\n      <div class=\"split-example ex-a\">\n        <ngx-split [direction]=\"direction\" gutterSize=\"35\">\n          <ngx-split-area [size]=\"30\">\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut\n              aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur.\n            </p>\n          </ngx-split-area>\n          <ngx-split-area [size]=\"70\">\n            <p>\n              Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n              eodolor sit amet, consectetur, adipisci velit, sed quia non\n              numquam eius modi tempora incidunt ut labore et dolore magnam\n              aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n              exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid\n              ex ea commodi consequatur? Quis autem vel eum iure reprehenderit\n              qui in ea voluptate velit esse quam nihil molestiae consequatur,\n              vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n            </p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <div class=\"split-example ex-b\">\n        <ngx-split [direction]=\"direction\" restrictMove=\"true\" gutterSize=\"1\">\n          <ngx-split-area [size]=\"30\"\n            ><p>\n              A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A A\n              A A A A A A A A A A A A A A\n            </p></ngx-split-area\n          >\n          <ngx-split-area [size]=\"50\"\n            ><p>\n              B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B B\n              B B B B B B B B B B B B B B\n            </p></ngx-split-area\n          >\n          <ngx-split-area [size]=\"20\"\n            ><p>\n              C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C C\n              C C C C C C C C C C C C C C\n            </p></ngx-split-area\n          >\n        </ngx-split>\n      </div>\n      <br />\n      <div class=\"btns\">\n        <button\n          class=\"btn btn-warning\"\n          (click)=\"\n            direction = direction === 'horizontal' ? 'vertical' : 'horizontal'\n          \"\n        >\n          {{ 'Toggle direction: \"' + direction + '\"' }}\n        </button>\n      </div>\n    </div>`,\n})\nexport class CustomGutterStyleComponent extends AComponent {\n  direction = 'horizontal';\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      .btns {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n      }\n    `,\n  ],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.DIR\"></ui-example-title>\n      <div class=\"split-example\">\n        <ngx-split [dir]=\"dir\">\n          <ngx-split-area size=\"20\">\n            <p>\n              1. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut\n              aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur.\n            </p>\n          </ngx-split-area>\n          <ngx-split-area size=\"40\">\n            <p>\n              2. Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n              eodolor sit amet, consectetur, adipisci velit, sed quia non\n              numquam eius modi tempora incidunt ut labore et dolore magnam\n              aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n              exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid\n              ex ea commodi consequatur? Quis autem vel eum iure reprehenderit\n              qui in ea voluptate velit esse quam nihil molestiae consequatur,\n              vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n            </p>\n          </ngx-split-area>\n          <ngx-split-area size=\"40\">\n            <p>\n              3. Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n              eodolor sit amet, consectetur, adipisci velit, sed quia non\n              numquam eius modi tempora incidunt ut labore et dolore magnam\n              aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n              exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid\n              ex ea commodi consequatur? Quis autem vel eum iure reprehenderit\n              qui in ea voluptate velit esse quam nihil molestiae consequatur,\n              vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n            </p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <br />\n      <div class=\"btns\">\n        <button\n          class=\"btn btn-warning\"\n          (click)=\"dir = dir === 'rtl' ? 'ltr' : 'rtl'\"\n        >\n          {{ 'Toggle dir: \"' + dir + '\"' }}\n        </button>\n      </div>\n    </div>`,\n})\nexport class DirRtlComponent extends AComponent {\n  dir = 'rtl';\n}\n","import { Component, ViewChild, ChangeDetectionStrategy } from '@angular/core';\nimport { SortableComponent } from 'ngx-bootstrap/sortable';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      .ngx-split-area {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        text-shadow: 2px 0 0 #fff, -2px 0 0 #fff, 0 2px 0 #fff, 0 -2px 0 #fff,\n          1px 1px #fff, -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff;\n      }\n\n      .opts-prop {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: space-around;\n      }\n      .opts-prop > div {\n        margin-bottom: 10px;\n      }\n\n      .opts-area > .title {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 10px;\n        background-color: #e8e8e8;\n      }\n\n      .area-item {\n        display: flex;\n        justify-content: space-around;\n        align-items: center;\n        padding: 4px;\n        cursor: move;\n      }\n      .area-item button {\n        margin: 0 5px;\n      }\n\n      .num {\n        color: #000000;\n        text-shadow: 2px 0 0 #fff, -2px 0 0 #fff, 0 2px 0 #fff, 0 -2px 0 #fff,\n          1px 1px #fff, -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff;\n      }\n      label {\n        margin: 0;\n      }\n    `,\n  ],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.GEEK\"></ui-example-title>\n      <div class=\"split-example\" style=\"background-color: #e5e0e0;\">\n        <ngx-split\n          [direction]=\"d.dir\"\n          [restrictMove]=\"d.restrictMove\"\n          [gutterSize]=\"d.gutterSize\"\n          [gutterStep]=\"d.gutterStep\"\n          [style.width]=\"d.width\"\n          [style.height]=\"d.height\"\n          [useTransition]=\"d.useTransition\"\n          style=\"background-color: #ffffff;\"\n        >\n          <ng-template\n            ngFor\n            let-area\n            [ngForOf]=\"d.areas\"\n            [ngForTrackBy]=\"trackByFct\"\n            let-index=\"index\"\n          >\n            <ngx-split-area\n              *ngIf=\"area.present\"\n              [visible]=\"area.visible\"\n              [order]=\"index\"\n              [size]=\"area.size\"\n              [style.background-color]=\"area.color\"\n              >{{ area.id }}</ngx-split-area\n            >\n          </ng-template>\n        </ngx-split>\n      </div>\n      <div class=\"opts-prop\">\n        <div>\n          <button\n            class=\"btn btn-warning btn-sm\"\n            [class.active]=\"!d.useTransition\"\n            (click)=\"d.useTransition = !d.useTransition\"\n          >\n            {{ 'useTransition: ' + d.useTransition }}\n          </button>\n        </div>\n        <div>\n          <div class=\"btn-group\">\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.dir\"\n              btnRadio=\"horizontal\"\n              >horizontal</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.dir\"\n              btnRadio=\"vertical\"\n              >vertical</label\n            >\n          </div>\n        </div>\n        <div>\n          <label>Width:&nbsp;</label>\n          <div class=\"btn-group\">\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.width\"\n              [btnRadio]=\"null\"\n              >null</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.width\"\n              btnRadio=\"400px\"\n              >400</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.width\"\n              btnRadio=\"600px\"\n              >600</label\n            >\n          </div>\n        </div>\n        <div>\n          <label>Height:&nbsp;</label>\n          <div class=\"btn-group\">\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.height\"\n              [btnRadio]=\"null\"\n              >null</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.height\"\n              btnRadio=\"200px\"\n              >200</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.height\"\n              btnRadio=\"350px\"\n              >350</label\n            >\n          </div>\n        </div>\n        <div>\n          <label>Gutter size:&nbsp;</label>\n          <div class=\"btn-group\">\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.gutterSize\"\n              [btnRadio]=\"null\"\n              >null</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.gutterSize\"\n              btnRadio=\"7\"\n              >7</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.gutterSize\"\n              btnRadio=\"22\"\n              >22</label\n            >\n          </div>\n        </div>\n        <div>\n          <label>Gutter step:&nbsp;</label>\n          <div class=\"btn-group\">\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.gutterStep\"\n              [btnRadio]=\"null\"\n              >null</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.gutterStep\"\n              btnRadio=\"10\"\n              >10</label\n            >\n            <label\n              class=\"btn btn-warning btn-sm\"\n              [(ngModel)]=\"d.gutterStep\"\n              btnRadio=\"50\"\n              >50</label\n            >\n          </div>\n        </div>\n      </div>\n      <div class=\"opts-area\">\n        <div class=\"title\">\n          <label><b>Areas (drag elements to change order):</b></label>\n          <button class=\"btn btn-warning btn-sm\" (click)=\"addArea()\">\n            Add area\n          </button>\n        </div>\n        <bs-sortable\n          [(ngModel)]=\"d.areas\"\n          [itemTemplate]=\"itemTemplate\"\n        ></bs-sortable>\n\n        <ng-template #itemTemplate let-item=\"item\" let-index=\"index\">\n          <div\n            [style.background-color]=\"item.value.color\"\n            class=\"area-item id-{{ item.value.id }}\"\n          >\n            <div class=\"num\">{{ item.value.id }}</div>\n            <div>\n              <button\n                class=\"btn btn-warning btn-sm\"\n                [class.active]=\"!item.value.present\"\n                (click)=\"item.value.present = !item.value.present\"\n              >\n                {{ '*ngIf=\"' + item.value.present + '\"' }}\n              </button>\n              <button\n                class=\"btn btn-warning btn-sm\"\n                [class.active]=\"!item.value.visible\"\n                (click)=\"item.value.visible = !item.value.visible\"\n              >\n                {{ '[visible]=\"' + item.value.visible + '\"' }}\n              </button>\n              <button\n                class=\"btn btn-warning btn-sm\"\n                (click)=\"removeArea(item.value)\"\n              >\n                Remove\n              </button>\n            </div>\n          </div>\n        </ng-template>\n      </div>\n    </div>`,\n})\nexport class GeekDemoComponent extends AComponent {\n  @ViewChild(SortableComponent, { static: false })\n  sortableComponent: SortableComponent;\n\n  d = {\n    dir: 'horizontal',\n    restrictMove: true,\n    useTransition: true,\n    gutterSize: null,\n    gutterStep: null,\n    width: null,\n    height: null,\n    areas: [\n      {\n        id: getRandomNum(),\n        color: getRandomColor(),\n        size: 25,\n        present: true,\n        visible: true,\n      },\n      {\n        id: getRandomNum(),\n        color: getRandomColor(),\n        size: 50,\n        present: true,\n        visible: true,\n      },\n      {\n        id: getRandomNum(),\n        color: getRandomColor(),\n        size: 25,\n        present: true,\n        visible: true,\n      },\n    ],\n  };\n\n  trackByFct(index, area) {\n    return area.id;\n  }\n\n  addArea() {\n    this.d.areas.push({\n      id: getRandomNum(),\n      color: getRandomColor(),\n      size: 25,\n      present: true,\n      visible: true,\n    });\n\n    this.sortableComponent.writeValue(this.d.areas);\n  }\n\n  removeArea(area: any) {\n    this.d.areas.splice(this.d.areas.indexOf(area), 1);\n\n    this.sortableComponent.writeValue(this.d.areas);\n  }\n}\n\nfunction getRandomNum(): number {\n  return Math.round(Math.random() * 1000);\n}\n\nfunction getRandomColor(): string {\n  return '#' + ((Math.random() * 0xffffff) << 0).toString(16);\n}\n","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SplitComponent } from 'ngx-split';\n\nimport { AComponent } from './AComponent';\nimport { formatDate } from '../format-date';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      ngx-split.ngx-transition.ngx-init:not(.ngx-dragging)\n        ::ng-deep\n        > .ngx-split-gutter,\n      ngx-split.ngx-transition.ngx-init:not(.ngx-dragging) > .ngx-split-area {\n        transition: flex-basis 1.5s !important;\n      }\n      ngx-split.ngx-disabled ::ng-deep > .ngx-split-gutter {\n        cursor: pointer !important;\n      }\n\n      .btns {\n        display: flex;\n        justify-content: space-around;\n        flex-wrap: wrap;\n      }\n      .btns > div {\n        flex: 1 1 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      .btns > div > button {\n        margin-bottom: 10px;\n      }\n      .logs > p {\n        margin-bottom: 5px;\n      }\n      .logs > ul {\n        height: 200px;\n        width: 100%;\n        overflow-y: scroll;\n        overflow-x: hidden;\n        border: 1px solid #bfbfbf;\n        background-color: #e8e8e8;\n      }\n    `,\n  ],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.CLICK\"></ui-example-title>\n      <div class=\"split-example\">\n        <ngx-split\n          #mySplit\n          [disabled]=\"isDisabled\"\n          gutterSize=\"10\"\n          [gutterDblClickDuration]=\"dblClickTime\"\n          direction=\"horizontal\"\n          [useTransition]=\"useTransition\"\n          (dragStart)=\"log('dragStart', $event)\"\n          (dragEnd)=\"log('dragEnd', $event)\"\n          (gutterClick)=\"log('gutterClick', $event)\"\n          (gutterDblClick)=\"log('gutterDblClick', $event)\"\n          (transitionEnd)=\"log('transitionEnd', $event)\"\n        >\n          <ngx-split-area\n            *ngFor=\"let a of areas\"\n            [size]=\"a.size\"\n            [order]=\"a.order\"\n          >\n            <p>{{ a.content }}</p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <br />\n      <div class=\"btns\">\n        <div>\n          <button\n            class=\"btn btn-warning\"\n            [class.active]=\"!useTransition\"\n            (click)=\"useTransition = !useTransition\"\n          >\n            {{ 'useTransition: ' + useTransition }}\n          </button>\n        </div>\n        <div>\n          <button\n            class=\"btn btn-warning\"\n            [class.active]=\"!isDisabled\"\n            (click)=\"isDisabled = !isDisabled\"\n          >\n            {{ 'isDisabled: ' + isDisabled }}\n          </button>\n        </div>\n        <div>\n          <label>Property <code>[gutterDblClickDuration]</code>:&nbsp;</label>\n          <div class=\"btn-group\">\n            <label\n              class=\"btn btn-warning\"\n              tooltip=\"When set to 0ms, 'click' is instant and 'dblclick' is impossible.\"\n              [class.disabled]=\"dblClickTime === 0\"\n              (click)=\"dblClickTime = 0\"\n              >0ms</label\n            >\n            <label\n              class=\"btn btn-warning\"\n              tooltip=\"When set to 500ms, 'click' is delayed and 'dblclick' is possible.\"\n              [class.disabled]=\"dblClickTime === 500\"\n              (click)=\"dblClickTime = 500\"\n              >500ms</label\n            >\n          </div>\n        </div>\n      </div>\n      <div class=\"logs\">\n        <p>All <code>ngx-split</code> events emitted:</p>\n        <ul #logs>\n          <li *ngFor=\"let l of logMessages\" [ngClass]=\"l.type\">{{ l.text }}</li>\n        </ul>\n      </div>\n    </div>`,\n})\nexport class GutterClickComponent extends AComponent\n  implements AfterViewInit, OnDestroy {\n  isDisabled = true;\n  useTransition = true;\n  dblClickTime = 0;\n  logMessages: Array<{ type: string; text: string }> = [];\n  areas = [\n    {\n      size: 25,\n      order: 1,\n      content: 'fg fdkjuh dfskhf dkujv fd vifdk hvdkuh fg',\n    },\n    {\n      size: 50,\n      order: 2,\n      content: 'sd h vdshhf deuyf gduyeg hudeg hudfg  fd vifdk hvdkuh fg',\n    },\n    {\n      size: 25,\n      order: 3,\n      content: 'sd jslfd ijgil dfhlt jkgvbnhj fl bhjgflh jfglhj fl h fg',\n    },\n  ];\n  sub: Subscription;\n\n  @ViewChild('mySplit', { static: false }) mySplitEl: SplitComponent;\n  @ViewChild('logs', { static: false }) logsEl: ElementRef;\n\n  ngAfterViewInit() {\n    this.sub = this.mySplitEl.dragProgress$.subscribe((data) => {\n      console.log(\n        `${formatDate(\n          new Date()\n        )} > dragProgress$ observable emitted but current component change detection didn't runned!`,\n        data\n      );\n    });\n  }\n\n  log(type: string, e: { gutterNum: number; sizes: Array<number> }) {\n    this.logMessages.push({\n      type,\n      text: `${formatDate(new Date())} > ${type} event > ${JSON.stringify(e)}`,\n    });\n\n    setTimeout(() => {\n      if (this.logsEl.nativeElement.scroll) {\n        (<HTMLElement>this.logsEl.nativeElement).scroll({\n          top: this.logMessages.length * 30,\n        });\n      }\n    });\n\n    if (type === 'gutterClick') {\n      this.gutterClick(e);\n    } else if (type === 'dragEnd') {\n      this.areas[0].size = e.sizes[0];\n      this.areas[1].size = e.sizes[1];\n      this.areas[2].size = e.sizes[2];\n    }\n  }\n\n  gutterClick(e: { gutterNum: number; sizes: Array<number> }) {\n    if (e.gutterNum === 1) {\n      if (this.areas[0].size > 0) {\n        this.areas[1].size += this.areas[0].size;\n        this.areas[0].size = 0;\n      } else if (this.areas[1].size > 25) {\n        this.areas[1].size -= 25;\n        this.areas[0].size = 25;\n      } else {\n        this.areas[0].size = 25;\n        this.areas[1].size = 50;\n        this.areas[2].size = 25;\n      }\n    } else if (e.gutterNum === 2) {\n      if (this.areas[2].size > 0) {\n        this.areas[1].size += this.areas[2].size;\n        this.areas[2].size = 0;\n      } else if (this.areas[1].size > 25) {\n        this.areas[1].size -= 25;\n        this.areas[2].size = 25;\n      } else {\n        this.areas[0].size = 25;\n        this.areas[1].size = 50;\n        this.areas[2].size = 25;\n      }\n    }\n  }\n\n  dragEnd(e: { gutterNum: number; sizes: Array<number> }) {\n    this.areas[0].size = e.sizes[0];\n    this.areas[1].size = e.sizes[1];\n    this.areas[2].size = e.sizes[2];\n  }\n\n  ngOnDestroy() {\n    if (this.sub) this.sub.unsubscribe();\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      .ngx-split-area > div {\n        position: relative;\n        height: 100%;\n        overflow: hidden;\n      }\n\n      .hack-iframe-hider {\n        background: rgba(0, 0, 0, 0.2);\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n      }\n    `,\n  ],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.IFRAME\"></ui-example-title>\n      <div class=\"split-example\" style=\"height: 400px;\">\n        <ngx-split\n          direction=\"horizontal\"\n          (dragStart)=\"showIframeHider = true\"\n          (dragEnd)=\"showIframeHider = false\"\n        >\n          <ngx-split-area size=\"40\">\n            <div>\n              <iframe\n                src=\"https://beeman.github.io/ngx-split\"\n                frameborder=\"0\"\n                width=\"100%\"\n                height=\"100%\"\n              ></iframe>\n              <div\n                [hidden]=\"showIframeHider === false\"\n                class=\"hack-iframe-hider\"\n              ></div>\n            </div>\n          </ngx-split-area>\n          <ngx-split-area size=\"60\">\n            <div>\n              <iframe\n                src=\"https://beeman.github.io/ngx-split\"\n                frameborder=\"0\"\n                width=\"100%\"\n                height=\"100%\"\n              ></iframe>\n              <div\n                [hidden]=\"showIframeHider === false\"\n                class=\"hack-iframe-hider\"\n              ></div>\n            </div>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n    </div>`,\n})\nexport class IframeComponent extends AComponent {\n  showIframeHider = false;\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      .btns {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n      }\n\n      .txt-min,\n      .txt-max,\n      .txt-minmax {\n        pointer-events: none;\n        position: absolute;\n        opacity: 0;\n        transition: opacity 0.2s;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n      }\n\n      .txt-min > p,\n      .txt-max > p,\n      .txt-minmax > p {\n        font-size: 30px;\n        font-weight: bold;\n        color: #cccccc;\n        text-align: center;\n      }\n\n      ngx-split-area {\n        background: lightblue;\n        transition: background 0.2s;\n        position: relative;\n        overflow: hidden !important;\n      }\n\n      ngx-split-area > p {\n        position: absolute;\n        font-size: 12px;\n        font-weight: bold;\n        padding: 5px;\n        line-height: 12px;\n      }\n\n      ngx-split-area.ngx-min {\n        background: green;\n      }\n      ngx-split-area.ngx-min .txt-min {\n        opacity: 1;\n      }\n      ngx-split-area.ngx-max {\n        background: red;\n      }\n      ngx-split-area.ngx-max .txt-max {\n        opacity: 1;\n      }\n      ngx-split-area.ngx-min.ngx-max {\n        background: #ff77e7;\n      }\n      ngx-split-area.ngx-min.ngx-max .txt-minmax {\n        opacity: 1;\n      }\n    `,\n  ],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.MINMAX\"></ui-example-title>\n      <h5>Percent mode:</h5>\n      <div class=\"split-example ex-percent\">\n        <ngx-split\n          unit=\"percent\"\n          [restrictMove]=\"restrictMove\"\n          gutterSize=\"30\"\n          (dragEnd)=\"log($event)\"\n        >\n          <ngx-split-area size=\"30\" minSize=\"20\" maxSize=\"30\">\n            <p>size=\"30\"<br />minSize=\"20\"<br />maxSize=\"30\"</p>\n            <div class=\"txt-min\"><p>MIN</p></div>\n            <div class=\"txt-max\"><p>MAX</p></div>\n          </ngx-split-area>\n          <ngx-split-area size=\"40\" minSize=\"30\" maxSize=\"50\">\n            <p>size=\"40\"<br />minSize=\"30\"<br />maxSize=\"50\"</p>\n            <div class=\"txt-min\"><p>MIN</p></div>\n            <div class=\"txt-max\"><p>MAX</p></div>\n          </ngx-split-area>\n          <ngx-split-area size=\"30\" minSize=\"20\" maxSize=\"50\">\n            <p>size=\"30\"<br />minSize=\"20\"<br />maxSize=\"50\"</p>\n            <div class=\"txt-min\"><p>MIN</p></div>\n            <div class=\"txt-max\"><p>MAX</p></div>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <h5>Pixel mode:</h5>\n      <div class=\"split-example ex-pixel\">\n        <ngx-split\n          unit=\"pixel\"\n          [restrictMove]=\"restrictMove\"\n          gutterSize=\"30\"\n          (dragEnd)=\"log($event)\"\n        >\n          <ngx-split-area size=\"200\" minSize=\"100\" maxSize=\"200\">\n            <p>size=\"200\"<br />minSize=\"100\"<br />maxSize=\"200\"</p>\n            <div class=\"txt-min\"><p>MIN</p></div>\n            <div class=\"txt-max\"><p>MAX</p></div>\n          </ngx-split-area>\n          <ngx-split-area size=\"*\">\n            <p>size=\"*\"</p>\n            <div class=\"txt-min\"><p>MIN</p></div>\n            <div class=\"txt-max\"><p>MAX</p></div>\n          </ngx-split-area>\n          <ngx-split-area size=\"150\" lockSize=\"true\">\n            <p>\n              size=\"150\"<br />lockSize=\"true\"<br /><br />Same as<br />minSize=\"150\"<br />maxSize=\"150\"\n            </p>\n            <div class=\"txt-minmax\">\n              <p>MIN<br />&<br />MAX</p>\n            </div>\n          </ngx-split-area>\n          <ngx-split-area size=\"250\" minSize=\"250\" maxSize=\"400\">\n            <p>size=\"250\"<br />minSize=\"250\"<br />maxSize=\"400\"</p>\n            <div class=\"txt-min\"><p>MIN</p></div>\n            <div class=\"txt-max\"><p>MAX</p></div>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <br />\n      <div class=\"btns\">\n        <button\n          class=\"btn btn-warning\"\n          (click)=\"restrictMove = restrictMove ? false : true\"\n        >\n          {{ 'Restrict move: \"' + restrictMove + '\"' }}\n        </button>\n      </div>\n    </div>`,\n})\nexport class MinMaxComponent extends AComponent {\n  restrictMove = false;\n\n  //\n  log(x) {\n    console.log(\n      'dragEnd ',\n      x.sizes,\n      ' total > ',\n      x.sizes.reduce((t, s) => t + s, 0)\n    );\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.NESTED\"></ui-example-title>\n      <div class=\"split-example\" style=\"height: 400px;\">\n        <ngx-split\n          direction=\"horizontal\"\n          restrictMove=\"true\"\n          [useTransition]=\"true\"\n        >\n          <ngx-split-area size=\"40\">\n            <ngx-split direction=\"vertical\" restrictMove=\"true\">\n              <ngx-split-area>\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                  do eiusmod tiam, quis nostrud exercitation ullamco laboris\n                  nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                  in reprehenderit in voluptate velit esse cillum dolore eu\n                  fugiat nulla pariatur.\n                </p>\n              </ngx-split-area>\n              <ngx-split-area>\n                <p>\n                  Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n                  accusantium doloremque laudantium, totam rem aperiam, eaque\n                  ipsa quae ab illo inventore veritatis et quasi architecto\n                  beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem\n                  quia voluptas sit aspernatur aut odit aut fugit, sed quia\n                  consequuntur magni dolores eodolor sit amet, consectetur,\n                  adipisci velit, sed quia non numquam eius modi tempora\n                  incidunt ut labore et dolore magnam aliquam quaerat\n                  voluptatem. Ut enim ad minima veniam, quis nostrum\n                  exercitationem ullam corporis suscipit laboriosam, nisi ut\n                  aliquid ex ea commodi consequatur? Quis autem vel eum iure\n                  reprehenderit qui in ea voluptate velit esse quam nihil\n                  molestiae consequatur, vel illum qui dolorem eum fugiat quo\n                  voluptas nulla pariatur?\n                </p>\n              </ngx-split-area>\n              <ngx-split-area>\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                  do eiusmod tiam, quis nostrud exercitation ullamco laboris\n                  nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                  in reprehenderit in voluptate velit esse cillum dolore eu\n                  fugiat nulla pariatur.\n                </p>\n              </ngx-split-area>\n            </ngx-split>\n          </ngx-split-area>\n          <ngx-split-area size=\"60\">\n            <ngx-split direction=\"vertical\" restrictMove=\"true\">\n              <ngx-split-area size=\"25\">\n                <p>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed\n                  do eiusmod tiam, quis nostrud exercitation ullamco laboris\n                  nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\n                  in reprehenderit in voluptate velit esse cillum dolore eu\n                  fugiat nulla pariatur.\n                </p>\n              </ngx-split-area>\n              <ngx-split-area size=\"75\">\n                <p>\n                  Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n                  accusantium doloremque laudantium, totam rem aperiam, eaque\n                  ipsa quae ab illo inventore veritatis et quasi architecto\n                  beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem\n                  quia voluptas sit aspernatur aut odit aut fugit, sed quia\n                  consequuntur magni dolores eodolor sit amet, consectetur,\n                  adipisci velit, sed quia non numquam eius modi tempora\n                  incidunt ut labore et dolore magnam aliquam quaerat\n                  voluptatem. Ut enim ad minima veniam, quis nostrum\n                  exercitationem ullam corporis suscipit laboriosam, nisi ut\n                  aliquid ex ea commodi consequatur? Quis autem vel eum iure\n                  reprehenderit qui in ea voluptate velit esse quam nihil\n                  molestiae consequatur, vel illum qui dolorem eum fugiat quo\n                  voluptas nulla pariatur?\n                </p>\n              </ngx-split-area>\n            </ngx-split>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n    </div>`,\n})\nexport class NestedComponent extends AComponent {}\n","import { Component, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { SplitComponent, SplitAreaDirective } from 'ngx-split';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      .btns {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n      }\n    `,\n  ],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.SIMPLE\"></ui-example-title>\n      <h5>Percent mode:</h5>\n      <div class=\"split-example ex-percent\">\n        <ngx-split\n          unit=\"percent\"\n          [direction]=\"direction\"\n          (dragEnd)=\"dragEnd('percent', $event)\"\n          #split=\"ngxSplit\"\n        >\n          <ngx-split-area size=\"30\" #area1=\"ngxSplitArea\">\n            <h5>Initial size: <b>30%</b></h5>\n            <h5>\n              Current size: <b>{{ sizes.percent.area1 }}%</b>\n            </h5>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut\n              aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur.\n            </p>\n          </ngx-split-area>\n          <ngx-split-area size=\"70\" #area2=\"ngxSplitArea\">\n            <h5>Initial size: <b>70%</b></h5>\n            <h5>\n              Current size: <b>{{ sizes.percent.area2 }}%</b>\n            </h5>\n            <p>\n              Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n              eodolor sit amet, consectetur, adipisci velit, sed quia non\n              numquam eius modi tempora incidunt ut labore et dolore magnam\n              aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n              exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid\n              ex ea commodi consequatur? Quis autem vel eum iure reprehenderit\n              qui in ea voluptate velit esse quam nihil molestiae consequatur,\n              vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n            </p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <h5>Pixel mode:</h5>\n      <div class=\"split-example ex-pixel\">\n        <ngx-split\n          unit=\"pixel\"\n          [direction]=\"direction\"\n          (dragEnd)=\"dragEnd('pixel', $event)\"\n        >\n          <ngx-split-area size=\"120\">\n            <h5>Initial size: <b>120px</b></h5>\n            <h5>\n              Current size: <b>{{ sizes.pixel.area1 }}px</b>\n            </h5>\n            <p>\n              Ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute\n              irure dolor in reprehenderit in voluptate velit esse cillum dolore\n              eu fugiat nulla pariatur.\n            </p>\n          </ngx-split-area>\n          <ngx-split-area size=\"*\">\n            <h5>Initial size: <b>*</b></h5>\n            <h5>\n              Current size: <b>{{ sizes.pixel.area2 }}</b>\n            </h5>\n            <p>\n              Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n              eodolor sit amet, consectetur, adipisci velit, sed quia non\n              numquam eius modi tempora incidunt ut labore et dolore magnam\n              aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n              exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid\n              ex ea commodi consequatur? Quis autem vel eum iure reprehenderit\n              qui in ea voluptate velit esse quam nihil molestiae consequatur,\n              vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n            </p>\n          </ngx-split-area>\n          <ngx-split-area size=\"160\">\n            <h5>Initial size: <b>160px</b></h5>\n            <h5>\n              Current size: <b>{{ sizes.pixel.area3 }}px</b>\n            </h5>\n            <p>\n              Eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut\n              aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur.\n            </p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <br />\n      <div class=\"btns\">\n        <button\n          class=\"btn btn-warning\"\n          (click)=\"\n            direction = direction === 'horizontal' ? 'vertical' : 'horizontal'\n          \"\n        >\n          {{ 'Toggle direction: \"' + direction + '\"' }}\n        </button>\n      </div>\n    </div>`,\n})\nexport class SimpleComponent extends AComponent {\n  @ViewChild('split', { static: false }) split: SplitComponent;\n  @ViewChild('area1', { static: false }) area1: SplitAreaDirective;\n  @ViewChild('area2', { static: false }) area2: SplitAreaDirective;\n\n  direction = 'horizontal';\n  sizes = {\n    percent: {\n      area1: 30,\n      area2: 70,\n    },\n    pixel: {\n      area1: 120,\n      area2: '*',\n      area3: 160,\n    },\n  };\n\n  constructor() {\n    super();\n\n    setTimeout(() => {\n      console.log('>>> split > ', this.split);\n      console.log('>>> area1 > ', this.area1);\n      console.log('>>> area2 > ', this.area2);\n    }, 1000);\n  }\n\n  dragEnd(unit, { sizes }) {\n    if (unit === 'percent') {\n      this.sizes.percent.area1 = sizes[0];\n      this.sizes.percent.area2 = sizes[1];\n    } else if (unit === 'pixel') {\n      this.sizes.pixel.area1 = sizes[0];\n      this.sizes.pixel.area2 = sizes[1];\n      this.sizes.pixel.area3 = sizes[2];\n    }\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Subscription, merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SplitComponent } from 'ngx-split';\n\nimport { AComponent } from './AComponent';\nimport { formatDate } from '../format-date';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.SYNC\"></ui-example-title>\n      <div class=\"split-example\">\n        <ngx-split direction=\"vertical\">\n          <div ngx-split-area size=\"20\">\n            <ngx-split direction=\"horizontal\" #mySplitA>\n              <div ngx-split-area [size]=\"sizes[0]\">A 1</div>\n              <ngx-split-area [size]=\"sizes[1]\">A 2</ngx-split-area>\n            </ngx-split>\n          </div>\n          <div ngx-split-area size=\"20\">\n            <ngx-split direction=\"horizontal\" #mySplitB>\n              <div ngx-split-area [size]=\"sizes[0]\">B 1</div>\n              <ngx-split-area [size]=\"sizes[1]\">B 2</ngx-split-area>\n            </ngx-split>\n          </div>\n          <ngx-split-area size=\"60\">\n            <ngx-split direction=\"horizontal\" #mySplitC>\n              <ngx-split-area [size]=\"sizes[0]\">C 1</ngx-split-area>\n              <div ngx-split-area [size]=\"sizes[1]\">\n                C 2<br />\n                Open devTools to view console.log() statements.<br />\n                <button class=\"btn btn-warning\" (click)=\"test()\">\n                  Trigger change detection\n                </button>\n              </div>\n            </ngx-split>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n    </div>`,\n})\nexport class SyncComponent extends AComponent\n  implements AfterViewInit, OnDestroy {\n  @ViewChild('mySplitA', { static: false }) mySplitAEl: SplitComponent;\n  @ViewChild('mySplitB', { static: false }) mySplitBEl: SplitComponent;\n  @ViewChild('mySplitC', { static: false }) mySplitCEl: SplitComponent;\n\n  sizes = [25, 75];\n  sub: Subscription;\n\n  ngAfterViewInit() {\n    this.sub = merge(\n      this.mySplitAEl.dragProgress$.pipe(map((data) => ({ name: 'A', data }))),\n      this.mySplitBEl.dragProgress$.pipe(map((data) => ({ name: 'B', data }))),\n      this.mySplitCEl.dragProgress$.pipe(map((data) => ({ name: 'C', data })))\n    ).subscribe((d) => {\n      if (d.name === 'A') {\n        // If split A changed > update BC\n        const sizesSplitA = this.mySplitAEl.getVisibleAreaSizes(); //d.data.sizes; <-- Could have use these values too\n\n        this.mySplitBEl.setVisibleAreaSizes(sizesSplitA);\n        this.mySplitCEl.setVisibleAreaSizes(sizesSplitA);\n      } else if (d.name === 'B') {\n        // Else if split B changed > update AC\n        const sizesSplitB = this.mySplitBEl.getVisibleAreaSizes(); //d.data.sizes; <-- Could have use these values too\n\n        this.mySplitAEl.setVisibleAreaSizes(sizesSplitB);\n        this.mySplitCEl.setVisibleAreaSizes(sizesSplitB);\n      } else if (d.name === 'C') {\n        // Else if split C changed > update AB\n        const sizesSplitC = this.mySplitCEl.getVisibleAreaSizes(); //d.data.sizes; <-- Could have use these values too\n\n        this.mySplitAEl.setVisibleAreaSizes(sizesSplitC);\n        this.mySplitBEl.setVisibleAreaSizes(sizesSplitC);\n      }\n\n      console.log(\n        `${formatDate(\n          new Date()\n        )} > dragProgress$ observable emitted, splits synchronized but current component change detection didn't runned! (from split ${\n          d.name\n        })`\n      );\n    });\n  }\n\n  test() {}\n\n  ngOnDestroy() {\n    if (this.sub) this.sub.unsubscribe();\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\nimport { AComponent } from './AComponent';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      .btns {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n      }\n    `,\n  ],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.TOGGLE\"></ui-example-title>\n      <div class=\"split-example ex1\" style=\"height: 150px;\">\n        <ngx-split [gutterSize]=\"15\" (dragEnd)=\"log('dragEnd', $event)\">\n          <ngx-split-area\n            *ngIf=\"action.isPresentA\"\n            [visible]=\"action.isVisibleA\"\n            [order]=\"0\"\n          >\n            <p>A</p>\n          </ngx-split-area>\n          <ngx-split-area\n            *ngIf=\"action.isPresentB\"\n            [visible]=\"action.isVisibleB\"\n            [order]=\"1\"\n          >\n            <p>B</p>\n          </ngx-split-area>\n          <ngx-split-area\n            *ngIf=\"action.isPresentC\"\n            [visible]=\"action.isVisibleC\"\n            [order]=\"2\"\n          >\n            <p>C</p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <p>Toggle <code>[visible]=\"boolean\"</code> properties:</p>\n      <div class=\"btns\">\n        <div class=\"btn-group\">\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.isVisibleA\"\n            (click)=\"action.isVisibleA = !action.isVisibleA\"\n            >{{ 'areaA: ' + action.isVisibleA }}</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.isVisibleB\"\n            (click)=\"action.isVisibleB = !action.isVisibleB\"\n            >{{ 'areaB: ' + action.isVisibleB }}</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.isVisibleC\"\n            (click)=\"action.isVisibleC = !action.isVisibleC\"\n            >{{ 'areaC: ' + action.isVisibleC }}</label\n          >\n        </div>\n      </div>\n      <p>Toggle <code>*ngIf=\"boolean\"</code> properties:</p>\n      <div class=\"btns\">\n        <div class=\"btn-group\">\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.isPresentA\"\n            (click)=\"action.isPresentA = !action.isPresentA\"\n            >{{ 'areaA: ' + action.isPresentA }}</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.isPresentB\"\n            (click)=\"action.isPresentB = !action.isPresentB\"\n            >{{ 'areaB: ' + action.isPresentB }}</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.isPresentC\"\n            (click)=\"action.isPresentC = !action.isPresentC\"\n            >{{ 'areaC: ' + action.isPresentC }}</label\n          >\n        </div>\n      </div>\n      <br />\n      <div class=\"alert alert-danger\" role=\"alert\">\n        <b>Warning:</b><br /><code>[visible]=\"false\"</code> only hides elements\n        and don't remove it from the DOM, It could lead to useless change\n        detection processing.<br />Use of <code>*ngIf=\"false\"</code> should be\n        the default option unless you have reasons to keep DOM elements.\n      </div>\n    </div>`,\n})\nexport class TogglingDomAndVisibleComponent extends AComponent {\n  action = {\n    isVisibleA: true,\n    isVisibleB: true,\n    isVisibleC: true,\n    isPresentA: true,\n    isPresentB: true,\n    isPresentC: true,\n    logs: '',\n  };\n\n  log(eventName, e) {\n    this.action.logs = `${new Date()}: ${eventName} > ${e}\\n${\n      this.action.logs\n    }`;\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport { AComponent } from './AComponent';\nimport { formatDate } from '../format-date';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    class: 'split-example-page',\n  },\n  styles: [\n    `\n      button {\n        margin: 4px;\n      }\n\n      .btns {\n        display: flex;\n        justify-content: space-around;\n        flex-wrap: wrap;\n      }\n      .btns > div {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        margin-bottom: 10px;\n      }\n      .btns > div > button {\n        margin-bottom: 10px;\n      }\n\n      .btns > div:nth-child(1) {\n        flex: 1 1 20%;\n      }\n      .btns > div:nth-child(2) {\n        flex: 1 1 40%;\n      }\n      .btns > div:nth-child(3) {\n        flex: 1 1 40%;\n      }\n      .logs > p {\n        margin-bottom: 5px;\n      }\n      .logs > ul {\n        height: 200px;\n        width: 100%;\n        overflow-y: scroll;\n        overflow-x: hidden;\n        border: 1px solid #bfbfbf;\n        background-color: #e8e8e8;\n      }\n\n      .ngx-split-area {\n        background: lightgrey;\n      }\n\n      .ngx-split-area.ngx-min {\n        background: green;\n      }\n\n      .ngx-split-area.ngx-max {\n        background: red;\n      }\n\n      :host .ex2 button {\n        width: 100%;\n      }\n\n      :host\n        .ex2\n        ::ng-deep\n        .ngx-transition.ngx-init:not(.ngx-dragging)\n        > .ngx-split-area,\n      :host\n        ::ng-deep\n        .ngx-transition.ngx-init:not(.ngx-dragging)\n        > .ngx-split-gutter {\n        transition: flex-basis 1s !important;\n      }\n    `,\n  ],\n  template: ` {{ testChangeDetectorRun() }}\n    <div class=\"container\">\n      <ui-example-title [type]=\"exampleEnum.TRANSITION\"></ui-example-title>\n      <div class=\"split-example\">\n        <ngx-split\n          direction=\"horizontal\"\n          disabled=\"true\"\n          [useTransition]=\"action.useTransition\"\n          (dragEnd)=\"\n            action.a1s = $event.sizes[0];\n            action.a2s = $event.sizes[1];\n            action.a3s = $event.sizes[2]\n          \"\n          (transitionEnd)=\"log($event)\"\n        >\n          <ngx-split-area [visible]=\"action.a1v\" [size]=\"action.a1s\" order=\"1\">\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tiam, quis nostrud exercitation ullamco laboris nisi ut\n              aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur.\n            </p>\n          </ngx-split-area>\n          <ngx-split-area [visible]=\"action.a2v\" [size]=\"action.a2s\" order=\"2\">\n            <p>\n              Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n              eodolor sit amet, consectetur, adipisci velit, sed quia non\n              numquam eius modi tempora incidunt ut labore et dolore magnam\n              aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n              exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid\n              ex ea commodi consequatur? Quis autem vel eum iure reprehenderit\n              qui in ea voluptate velit esse quam nihil molestiae consequatur,\n              vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n            </p>\n          </ngx-split-area>\n          <ngx-split-area [visible]=\"action.a3v\" [size]=\"action.a3s\" order=\"3\">\n            <p>\n              Sed ut perspiciatis unde omnis iste natus error sit voluptatem\n              accusantium doloremque laudantium, totam rem aperiam, eaque ipsa\n              quae ab illo inventore veritatis et quasi architecto beatae vitae\n              dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit\n              aspernatur aut odit aut fugit, sed quia consequuntur magni dolores\n              eodolor sit amet, consectetur, adipisci velit, sed quia non\n              numquam eius modi tempora incidunt ut labore et dolore magnam\n              aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum\n              exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid\n              ex ea commodi consequatur? Quis autem vel eum iure reprehenderit\n              qui in ea voluptate velit esse quam nihil molestiae consequatur,\n              vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n            </p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <br />\n      <div class=\"btns\">\n        <div>\n          <button\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.useTransition\"\n            (click)=\"action.useTransition = !action.useTransition\"\n          >\n            {{ 'useTransition: ' + action.useTransition }}\n          </button>\n        </div>\n        <div class=\"btn-group\">\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.a1v\"\n            (click)=\"action.a1v = !action.a1v\"\n            >{{ 'area1: ' + action.a1v }}</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.a2v\"\n            (click)=\"action.a2v = !action.a2v\"\n            >{{ 'area2: ' + action.a2v }}</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!action.a3v\"\n            (click)=\"action.a3v = !action.a3v\"\n            >{{ 'area3: ' + action.a3v }}</label\n          >\n        </div>\n        <div class=\"btn-group\">\n          <label\n            class=\"btn btn-warning\"\n            [class.disabled]=\"\n              action.a1s === 25 || !action.a1v || !action.a2v || !action.a3v\n            \"\n            (click)=\"action.a1s = 25; action.a2s = 50; action.a3s = 25\"\n            >Set sizes to 25/50/25</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.disabled]=\"\n              action.a1s === 40 || !action.a1v || !action.a2v || !action.a3v\n            \"\n            (click)=\"action.a1s = 40; action.a2s = 20; action.a3s = 40\"\n            >Set sizes to 40/20/40</label\n          >\n        </div>\n      </div>\n      <div class=\"logs\">\n        <p>Events <code>(transitionEnd)</code>:</p>\n        <ul #logs>\n          <li *ngFor=\"let l of logMessages\" [ngClass]=\"l.type\">{{ l.text }}</li>\n        </ul>\n      </div>\n      <br />\n      <hr />\n      <br />\n      <div class=\"split-example ex2\" style=\"height: 150px;\">\n        <ngx-split useTransition=\"true\" unit=\"pixel\">\n          <ngx-split-area\n            size=\"200\"\n            minSize=\"200\"\n            order=\"1\"\n            [visible]=\"only === 1 || only === 0\"\n          >\n            <button (click)=\"left()\" class=\"btn btn-warning\">\n              {{ only === 1 ? 'LEFT ⬅️' : 'LEFT ➡' }}\n            </button>\n            <p>size: 200px<br />minSize: 200px</p>\n          </ngx-split-area>\n          <ngx-split-area\n            size=\"*\"\n            order=\"2\"\n            [visible]=\"only === 2 || only === 0\"\n          >\n            <button (click)=\"center()\" class=\"btn btn-warning\">\n              {{ only === 2 ? '➡ ️CENTER ⬅' : '️⬅ ️CENTER ➡' }}\n            </button>\n            <p>size: *</p>\n          </ngx-split-area>\n          <ngx-split-area\n            size=\"200\"\n            minSize=\"200\"\n            order=\"3\"\n            [visible]=\"only === 3 || only === 0\"\n          >\n            <button (click)=\"right()\" class=\"btn btn-warning\">\n              {{ only === 3 ? '➡ RIGHT' : '⬅️ RIGHT' }}\n            </button>\n            <p>size: 200px<br />minSize: 200px</p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <div class=\"split-example ex2\" style=\"height: 150px;\">\n        <ngx-split useTransition=\"true\" unit=\"percent\">\n          <ngx-split-area\n            size=\"30\"\n            minSize=\"30\"\n            order=\"1\"\n            [visible]=\"only === 1 || only === 0\"\n          >\n            <button (click)=\"left()\" class=\"btn btn-warning\">\n              {{ only === 1 ? 'LEFT ⬅️' : 'LEFT ➡' }}\n            </button>\n            <p>size: 30%<br />minSize: 30%</p>\n          </ngx-split-area>\n          <ngx-split-area\n            size=\"40\"\n            order=\"2\"\n            [visible]=\"only === 2 || only === 0\"\n          >\n            <button (click)=\"center()\" class=\"btn btn-warning\">\n              {{ only === 2 ? '➡ ️CENTER ⬅' : '️⬅ ️CENTER ➡' }}\n            </button>\n            <p>size: 40%</p>\n          </ngx-split-area>\n          <ngx-split-area\n            size=\"30\"\n            minSize=\"30\"\n            order=\"3\"\n            [visible]=\"only === 3 || only === 0\"\n          >\n            <button (click)=\"right()\" class=\"btn btn-warning\">\n              {{ only === 3 ? '➡ RIGHT' : '⬅️ RIGHT' }}\n            </button>\n            <p>size: 30%<br />minSize: 30%</p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <br />\n      <hr />\n      <br />\n      <div class=\"btns\">\n        <div class=\"btn-group\">\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!keepA\"\n            (click)=\"keepA = !keepA\"\n            >{{ 'A: ' + keepA }}</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!keepB\"\n            (click)=\"keepB = !keepB\"\n            >{{ 'B: ' + keepB }}</label\n          >\n          <label\n            class=\"btn btn-warning\"\n            [class.active]=\"!keepC\"\n            (click)=\"keepC = !keepC\"\n            >{{ 'C: ' + keepC }}</label\n          >\n        </div>\n      </div>\n      <div class=\"split-example ex2\" style=\"height: 150px;\">\n        <ngx-split useTransition=\"true\" unit=\"pixel\">\n          <ngx-split-area size=\"200\" minSize=\"200\" order=\"1\" [visible]=\"keepA\">\n            <p>A<br />size: 200px<br />minSize: 200px</p>\n          </ngx-split-area>\n          <ngx-split-area size=\"*\" order=\"2\" [visible]=\"keepB\">\n            <p>B<br />size: *</p>\n          </ngx-split-area>\n          <ngx-split-area size=\"200\" minSize=\"200\" order=\"3\" [visible]=\"keepC\">\n            <p>C<br />size: 200px<br />minSize: 200px</p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n      <div class=\"split-example ex2\" style=\"height: 150px;\">\n        <ngx-split useTransition=\"true\" unit=\"percent\">\n          <ngx-split-area size=\"30\" minSize=\"30\" order=\"1\" [visible]=\"keepA\">\n            <p>A<br />size: 30%<br />minSize: 30%</p>\n          </ngx-split-area>\n          <ngx-split-area size=\"40\" order=\"2\" [visible]=\"keepB\">\n            <p>B<br />size: 40%</p>\n          </ngx-split-area>\n          <ngx-split-area size=\"30\" minSize=\"30\" order=\"3\" [visible]=\"keepC\">\n            <p>C<br />size: 30%<br />minSize: 30%</p>\n          </ngx-split-area>\n        </ngx-split>\n      </div>\n    </div>`,\n})\nexport class TransitionsComponent extends AComponent {\n  action = {\n    a1s: 25,\n    a2s: 50,\n    a3s: 25,\n    a1v: true,\n    a2v: true,\n    a3v: true,\n    useTransition: true,\n  };\n  logMessages: Array<{ type: string; text: string }> = [];\n\n  @ViewChild('logs', { static: false }) logsEl: ElementRef;\n\n  log(e) {\n    this.logMessages.push({\n      type: 'transitionEnd',\n      text: `${formatDate(new Date())} > transitionEnd event > ${e}`,\n    });\n    setTimeout(() => {\n      if (this.logsEl.nativeElement.scroll) {\n        (<HTMLElement>this.logsEl.nativeElement).scroll({\n          top: this.logMessages.length * 30,\n        });\n      }\n    });\n  }\n\n  //\n\n  only = 0;\n\n  left() {\n    switch (this.only) {\n      case 0:\n      case 2:\n      case 3:\n        this.only = 1;\n        return;\n      case 1:\n        this.only = 0;\n        return;\n    }\n  }\n  center() {\n    switch (this.only) {\n      case 0:\n      case 1:\n      case 3:\n        this.only = 2;\n        return;\n      case 2:\n        this.only = 0;\n        return;\n    }\n  }\n  right() {\n    switch (this.only) {\n      case 0:\n      case 1:\n      case 2:\n        this.only = 3;\n        return;\n      case 3:\n        this.only = 0;\n        return;\n    }\n  }\n\n  //\n\n  keepA = true;\n  keepB = true;\n  keepC = true;\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { cloneDeep } from 'lodash';\n\nimport { AComponent } from './AComponent';\n\ninterface IConfig {\n  columns: Array<{\n    visible: boolean;\n    size: number;\n    rows: Array<{\n      visible: boolean;\n      size: number;\n      type: string;\n    }>;\n  }>;\n  disabled: boolean;\n}\n\nconst defaultConfig: IConfig = {\n  columns: [\n    {\n      visible: true,\n      size: 25,\n      rows: [\n        { visible: true, size: 25, type: 'A' },\n        { visible: true, size: 75, type: 'B' },\n      ],\n    },\n    {\n      visible: true,\n      size: 50,\n      rows: [\n        { visible: true, size: 60, type: 'doc' },\n        { visible: true, size: 40, type: 'C' },\n      ],\n    },\n    {\n      visible: true,\n      size: 25,\n      rows: [\n        { visible: true, size: 20, type: 'D' },\n        { visible: true, size: 30, type: 'E' },\n        { visible: true, size: 50, type: 'F' },\n      ],\n    },\n  ],\n  disabled: false,\n};\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      :host {\n        display: block;\n        width: 100%;\n        height: 100%;\n      }\n      .bloc {\n        height: 100%;\n      }\n\n      .explanations {\n        padding: 15px;\n      }\n\n      .panel {\n        font-size: 100px;\n        font-weight: bold;\n        color: #cccccc;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100%;\n        overflow: hidden;\n      }\n      .panel > p {\n        margin: 0;\n      }\n      button {\n        margin-bottom: 10px;\n      }\n    `,\n  ],\n  template: ` <ngx-split\n    *ngIf=\"config\"\n    direction=\"horizontal\"\n    [disabled]=\"config.disabled\"\n    (dragEnd)=\"onDragEnd(-1, $event)\"\n  >\n    <ng-template ngFor let-column [ngForOf]=\"config.columns\" let-icol=\"index\">\n      <ngx-split-area\n        *ngIf=\"column.visible\"\n        [order]=\"icol\"\n        [size]=\"column.size\"\n      >\n        <ngx-split\n          direction=\"vertical\"\n          [disabled]=\"config.disabled\"\n          (dragEnd)=\"onDragEnd(icol, $event)\"\n        >\n          <ng-template ngFor let-row [ngForOf]=\"column.rows\" let-irow=\"index\">\n            <ngx-split-area\n              *ngIf=\"row.visible\"\n              [order]=\"irow\"\n              [size]=\"row.size\"\n            >\n              <div [ngSwitch]=\"row.type\" class=\"bloc\">\n                <div *ngSwitchCase=\"'doc'\" class=\"explanations\">\n                  <ui-example-title\n                    [type]=\"exampleEnum.WORKSPACE\"\n                  ></ui-example-title>\n                  <p>\n                    All areas size and visibility are saved to localStorage.<br />\n                    Toggle areas visibility using following buttons:\n                  </p>\n                  <ng-template ngFor let-c [ngForOf]=\"config.columns\">\n                    <ng-template ngFor let-r [ngForOf]=\"c.rows\">\n                      <button\n                        *ngIf=\"r.type !== 'doc'\"\n                        (click)=\"\n                          r.visible = !r.visible; refreshColumnVisibility()\n                        \"\n                        [class.active]=\"!r.visible\"\n                        class=\"btn btn-warning\"\n                      >\n                        {{ r.type }}\n                      </button>\n                    </ng-template>\n                  </ng-template>\n                  <br />\n                  <button\n                    class=\"btn btn-warning\"\n                    [class.active]=\"!config.disabled\"\n                    (click)=\"toggleDisabled()\"\n                  >\n                    {{ 'isDisabled: ' + config.disabled }}\n                  </button>\n                  <br />\n                  <button (click)=\"resetConfig()\" class=\"btn btn-warning\">\n                    Reset localStorage\n                  </button>\n                </div>\n                <div *ngSwitchDefault class=\"panel\">\n                  <p>{{ row.type }}</p>\n                </div>\n              </div>\n            </ngx-split-area>\n          </ng-template>\n        </ngx-split>\n      </ngx-split-area>\n    </ng-template>\n  </ngx-split>`,\n})\nexport class WorkspaceLocalstorageComponent extends AComponent\n  implements OnInit {\n  localStorageName = 'ngx-split-ws';\n  config: IConfig = null;\n\n  ngOnInit() {\n    if (localStorage.getItem(this.localStorageName)) {\n      this.config = JSON.parse(localStorage.getItem(this.localStorageName));\n    } else {\n      this.resetConfig();\n    }\n  }\n\n  resetConfig() {\n    this.config = cloneDeep(defaultConfig);\n\n    localStorage.removeItem(this.localStorageName);\n  }\n\n  onDragEnd(\n    columnindex: number,\n    e: { gutterNum: number; sizes: Array<number> }\n  ) {\n    // Column dragged\n    if (columnindex === -1) {\n      // Set size for all visible columns\n      this.config.columns\n        .filter((c) => c.visible === true)\n        .forEach((column, index) => (column.size = e.sizes[index]));\n    }\n    // Row dragged\n    else {\n      // Set size for all visible rows from specified column\n      this.config.columns[columnindex].rows\n        .filter((r) => r.visible === true)\n        .forEach((row, index) => (row.size = e.sizes[index]));\n    }\n\n    this.saveLocalStorage();\n  }\n\n  toggleDisabled() {\n    this.config.disabled = !this.config.disabled;\n\n    this.saveLocalStorage();\n  }\n\n  refreshColumnVisibility() {\n    // Refresh columns visibility based on inside rows visibilities (If no row > hide column)\n    this.config.columns.forEach((column, index) => {\n      column.visible = column.rows.some((row) => row.visible === true);\n    });\n\n    this.saveLocalStorage();\n  }\n\n  saveLocalStorage() {\n    localStorage.setItem(this.localStorageName, JSON.stringify(this.config));\n  }\n}\n","export function formatDate(date) {\n  const year = date.getFullYear(),\n    month = date.getMonth() + 1, // months are zero indexed\n    day = date.getDate(),\n    hour = date.getHours(),\n    minute = date.getMinutes(),\n    second = date.getSeconds(),\n    millisecond = date.getMilliseconds(),\n    hourFormatted = hour % 12 || 12, // hour returned in 24 hour format\n    minuteFormatted = minute < 10 ? '0' + minute : minute,\n    secondFormatted = second < 10 ? '0' + second : second,\n    millisecondFormatted = millisecond < 100 ? '0' + millisecond : millisecond;\n\n  // return `${ month }/${ day }/${ year } ${ hourFormatted }:${ minuteFormatted }:${ secondFormatted }`;\n  return `${hourFormatted}:${minuteFormatted}:${secondFormatted}.${millisecondFormatted}`;\n}\n","import { Component, Input } from '@angular/core';\nimport {\n  DomSanitizer,\n  SafeHtml,\n  SafeResourceUrl,\n} from '@angular/platform-browser';\nimport { ExampleEnum } from '../../example-enum';\n\nimport { examples } from '../../example-list';\n\n@Component({\n  selector: 'ui-example-title',\n  styles: [\n    `\n      h4 {\n        display: flex;\n        align-items: center;\n      }\n      h4 > div {\n        margin-right: 20px;\n      }\n    `,\n  ],\n  template: ` <h4>\n      <div [innerHTML]=\"label\"></div>\n      <a class=\"btn btn-secondary\" [href]=\"url\" target=\"_blank\">View code</a>\n    </h4>\n    <hr />`,\n})\nexport class ExampleTitleComponent {\n  label: SafeHtml;\n  url: SafeResourceUrl;\n\n  _type: ExampleEnum;\n  @Input() set type(v: ExampleEnum) {\n    const ex = examples.find((e) => e.type === v);\n    if (!ex) return;\n\n    this._type = v;\n    this.label = this.sanitizer.bypassSecurityTrustHtml(ex.label);\n    this.url = this.sanitizer.bypassSecurityTrustResourceUrl(ex.srcUrl);\n  }\n\n  constructor(private sanitizer: DomSanitizer) {}\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operators';\nimport { IExampleData } from '../../interfaces/example-data';\n\nimport { examples } from '../../example-list';\n\n@Component({\n  selector: 'ui-topbar',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n      a.navbar-brand,\n      a.navbar-brand:hover {\n        font-weight: bold;\n        color: #e83e8c;\n      }\n\n      li > a {\n        cursor: pointer;\n      }\n\n      ul.dropdown-menu > li > a:active,\n      ul.dropdown-menu > li.active > a {\n        background-color: #eeeeee;\n        cursor: default;\n        color: #000000;\n      }\n\n      .navbar-toggler {\n        float: right;\n        margin-right: 120px;\n      }\n\n      @media (max-width: 992px) {\n        .container-fluid {\n          padding-left: 0;\n        }\n        a.navbar-brand {\n          margin-right: 0;\n        }\n      }\n    `,\n  ],\n  host: {\n    class: 'navbar navbar-expand-lg fixed-top navbar-dark bg-dark',\n  },\n  template: `\n    <a class=\"navbar-brand\" href=\"#\">ngx-split</a>\n    <button\n      class=\"navbar-toggler hidden-lg-up\"\n      (click)=\"isCollapsed = !isCollapsed\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" [collapse]=\"isCollapsed\">\n      <ul class=\"nav navbar-nav\">\n        <li class=\"nav-item\" [class.active]=\"router.isActive('/', true)\">\n          <a class=\"nav-link\" routerLink=\"/\">Home</a>\n        </li>\n        <li\n          class=\"nav-item\"\n          [class.active]=\"router.isActive('/changelog', true)\"\n        >\n          <a class=\"nav-link\" routerLink=\"/changelog\">Changelog</a>\n        </li>\n        <li\n          class=\"nav-item\"\n          [class.active]=\"router.isActive('/documentation', true)\"\n        >\n          <a class=\"nav-link\" routerLink=\"/documentation\">Documentation</a>\n        </li>\n        <li class=\"nav-item dropdown\" dropdown>\n          <a class=\"nav-link dropdown-toggle\" dropdownToggle\n            >Examples <span class=\"caret\"></span\n          ></a>\n          <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n            <li\n              *ngFor=\"let ex of examples\"\n              [class.active]=\"router.isActive(ex.path, true)\"\n            >\n              <a\n                class=\"dropdown-item\"\n                [routerLink]=\"ex.path\"\n                [innerHTML]=\"transform(ex.label)\"\n              ></a>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class TopbarComponent {\n  examples: Array<IExampleData>;\n  isCollapsed = true;\n\n  constructor(private sanitizer: DomSanitizer, public router: Router) {\n    this.examples = examples;\n\n    this.router.events\n      .pipe(filter((e) => e instanceof NavigationStart))\n      .subscribe(() => {\n        this.isCollapsed = true;\n      });\n  }\n\n  transform(label: string) {\n    return this.sanitizer.bypassSecurityTrustHtml(label);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { SortableModule } from 'ngx-bootstrap/sortable';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { NgxSplitModule } from 'ngx-split';\n\n@NgModule({\n  imports: [\n    BsDropdownModule.forRoot(),\n    ButtonsModule.forRoot(),\n    CollapseModule.forRoot(),\n    SortableModule.forRoot(),\n    TooltipModule.forRoot(),\n    NgxSplitModule.forRoot(),\n    FormsModule,\n  ],\n  exports: [\n    BsDropdownModule,\n    ButtonsModule,\n    CollapseModule,\n    SortableModule,\n    TooltipModule,\n    NgxSplitModule,\n    FormsModule,\n  ],\n})\nexport class UiSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { UiSharedModule } from './ui-shared.module';\n\nimport { ExampleTitleComponent } from './components/example-title.component';\nimport { TopbarComponent } from './components/topbar.component';\n\nconst COMPONENTS = [ExampleTitleComponent, TopbarComponent];\nconst MODULES = [CommonModule, RouterModule, UiSharedModule];\n\n@NgModule({\n  declarations: [...COMPONENTS],\n  exports: [...COMPONENTS, ...MODULES],\n  imports: [...MODULES],\n})\nexport class UiModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}