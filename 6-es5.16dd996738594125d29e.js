function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{CfhG:function(e,t,i){"use strict";i.r(t),i.d(t,"DocumentationModule",(function(){return O}));var n=i("2kYt"),a=i("sEIs"),b=i("EM62");function c(e,t){if(1&e&&(b.Ob(0,"tr"),b.Ob(1,"td"),b.pc(2),b.Nb(),b.Ob(3,"td"),b.pc(4),b.Nb(),b.Ob(5,"td"),b.Ob(6,"code"),b.pc(7),b.Nb(),b.Nb(),b.Mb(8,"td",6),b.Nb()),2&e){var i=t.$implicit;b.zb(2),b.qc(i.name),b.zb(2),b.qc(i.type),b.zb(3),b.qc(i.default),b.zb(1),b.dc("innerHTML",i.details,b.ic)}}function o(e,t){if(1&e&&(b.Ob(0,"tr"),b.Ob(1,"td"),b.pc(2),b.Nb(),b.Ob(3,"td"),b.Ob(4,"code"),b.pc(5),b.Nb(),b.Nb(),b.Mb(6,"td",6),b.Nb()),2&e){var i=t.$implicit;b.zb(2),b.qc(i.name),b.zb(3),b.qc(i.value),b.zb(1),b.dc("innerHTML",i.details,b.ic)}}function s(e,t){if(1&e&&(b.Ob(0,"tr"),b.Ob(1,"td"),b.pc(2),b.Nb(),b.Ob(3,"td"),b.Ob(4,"code"),b.pc(5),b.Nb(),b.Nb(),b.Mb(6,"td",6),b.Nb()),2&e){var i=t.$implicit;b.zb(2),b.qc(i.name),b.zb(3),b.qc(i.type),b.zb(1),b.dc("innerHTML",i.details,b.ic)}}function r(e,t){if(1&e&&(b.Ob(0,"tr"),b.Ob(1,"td"),b.pc(2),b.Nb(),b.Ob(3,"td"),b.pc(4),b.Nb(),b.Ob(5,"td"),b.Ob(6,"code"),b.pc(7),b.Nb(),b.Nb(),b.Mb(8,"td",6),b.Nb()),2&e){var i=t.$implicit;b.zb(2),b.qc(i.name),b.zb(2),b.qc(i.type),b.zb(3),b.qc(i.default),b.zb(1),b.dc("innerHTML",i.details,b.ic)}}function d(e,t){if(1&e&&(b.Ob(0,"tr"),b.Ob(1,"td"),b.Ob(2,"code"),b.pc(3),b.Nb(),b.Nb(),b.Mb(4,"td",6),b.Nb()),2&e){var i=t.$implicit;b.zb(3),b.qc(i.name),b.zb(1),b.dc("innerHTML",i.details,b.ic)}}function l(e,t){if(1&e&&(b.Ob(0,"tr"),b.Ob(1,"td"),b.Ob(2,"code"),b.pc(3),b.Nb(),b.Nb(),b.Mb(4,"td",6),b.Nb()),2&e){var i=t.$implicit;b.zb(3),b.qc(i.name),b.zb(1),b.dc("innerHTML",i.details,b.ic)}}function u(e,t){if(1&e&&(b.Ob(0,"tr"),b.Ob(1,"td"),b.Ob(2,"code"),b.pc(3),b.Nb(),b.Nb(),b.Mb(4,"td",6),b.Nb()),2&e){var i=t.$implicit;b.zb(3),b.qc(i.name),b.zb(1),b.dc("innerHTML",i.details,b.ic)}}var p,g,m=((g=function e(){_classCallCheck(this,e),this.splitDoc={inputs:[{name:"direction",type:"string",default:'"horizontal"',details:'Select split direction: <code>"horizontal"</code> or <code>"vertical"</code>.'},{name:"unit",type:"string",default:'"percent"',details:'Selected unit you want to use: <code>"percent"</code> or <code>"pixel"</code> to specify area sizes.'},{name:"gutterSize",type:"number",default:"11",details:"Gutters's size (dragging elements) in pixels."},{name:"gutterStep",type:"number",default:"1",details:"Gutter step while moving in pixels."},{name:"restrictMove",type:"boolean",default:"false",details:"Set to <code>true</code> if you want to limit gutter move to adjacent areas only."},{name:"disabled",type:"boolean",default:"false",details:"Disable the dragging feature (remove cursor/image on gutters). <code>(gutterClick)</code>/<code>(gutterDblClick)</code> still emits."},{name:"dir",type:"string",default:'"ltr"',details:'Indicates the directionality of the areas: <code>"ltr"</code> (left to right) or <code>"rtl"</code> (right to left).'},{name:"useTransition",type:"boolean",default:"false",details:'Add transition when toggling visibility using <code>[visible]</code> or <code>[size]</code> changes.<br><u>Warning: Transitions are not working for <a href="https://github.com/philipwalton/flexbugs#flexbug-16">IE/Edge/Safari</a></u>'},{name:"gutterDblClickDuration",type:"number",default:"0",details:"Milliseconds to detect a double click on a gutter. Set it around 300-500ms if you want to use <code>(gutterDblClick)</code> event."}],outputs:[{name:"dragStart",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when drag starts."},{name:"dragEnd",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when drag ends."},{name:"gutterClick",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when user clicks on a gutter. See <code>[gutterDblClickDuration]</code> input."},{name:"gutterDblClick",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when user double clicks on a gutter. See <code>[gutterDblClickDuration]</code> input."},{name:"transitionEnd",value:"Array<number>",details:'Emit when transition ends (could be triggered from <code>[visible]</code> or <code>[size]</code> changes).<br>Only if <code>[useTransition]="true"</code>.<br><u>Warning: Transitions are not working for <a href="https://github.com/philipwalton/flexbugs#flexbug-16">IE/Edge/Safari</a></u>'}],class:[{name:"dragProgress$",type:"Observable<{gutterNum: number, sizes: Array<number>}>",details:"Emit when dragging. Replace old <code>(dragProgress)</code> template event for better flexibility about change detection mechanism.<br><u>Warning: Running outside zone by design, if you need to notify angular add</u> <code>this.splitEl.dragProgress$.subscribe(x => this.ngZone.run(() => this.x = x));</code>"},{name:"setVisibleAreaSizes()",type:"(Array<number>) => boolean",details:"Set all <b>visible</b> area sizes in one go, return a boolean to know if input values were correct. Useful when combined with <code>dragProgress$</code> to sync multiple splits."},{name:"getVisibleAreaSizes()",type:"() => Array<number>",details:"Get all <b>visible</b> area sizes."}]},this.splitAreaDoc={inputs:[{name:"size",type:"number",default:"-",details:'Size of the area in selected unit (<code>percent</code>/<code>pixel</code>).<br><u>Percent mode:</u> All areas sizes should equal to 100, If not, all areas will have the same size.<br><u>Pixel mode:</u> An area with  wildcard size (<code>[size]="\'*\'"</code>) is mandatory (only one) and can\'t have <code>[visible]="false"</code> or <code>minSize</code>/<code>maxSize</code>/<code>lockSize</code> properties.'},{name:"minSize",type:"number",default:"null",details:"Minimum pixel or percent size, can't be smaller than provided <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"maxSize",type:"number",default:"null",details:"Maximum pixel or percent size, can't be bigger than provided <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"lockSize",type:"boolean",default:"false",details:"Lock area size, same as <code>minSize</code> = <code>maxSize</code> = <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"visible",type:"boolean",default:"true",details:"Hide area visually but still present in the DOM, use <code>ngIf</code> to completely remove it.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"}]},this.cssClasses={split:[{name:"ngx-init",details:"Added after component initialization."},{name:"ngx-horizontal / ngx-vertical",details:'Depends on <code>&lt;ngx-split [direction]="x"&gt;</code>.'},{name:"ngx-disabled",details:'Added when <code>&lt;ngx-split [disabled]="true"&gt;</code>.'},{name:"ngx-transition",details:'Added when <code>&lt;ngx-split [useTransition]="true"&gt;</code>.'},{name:"ngx-dragging",details:"Added while a gutter is dragged."}],area:[{name:"ngx-split-area",details:"Added on all areas."},{name:"ngx-hidden",details:'Added when <code>&lt;ngx-split-area [visible]="false"&gt;</code>.'}],gutter:[{name:"ngx-split-gutter",details:"Added on all gutters."},{name:"ngx-dragged",details:"Added on gutter while dragged."}]}}).\u0275fac=function(e){return new(e||g)},g.\u0275cmp=b.Fb({type:g,selectors:[["ng-component"]],decls:107,vars:7,consts:[[1,"container"],[1,"sel"],[1,"selContent"],[1,"table","table-striped"],[4,"ngFor","ngForOf"],[2,"width","40%"],[3,"innerHTML"]],template:function(e,t){1&e&&(b.Ob(0,"div",0),b.Ob(1,"h4"),b.Ob(2,"b"),b.pc(3,"SplitComponent"),b.Nb(),b.pc(4,"\xa0"),b.Ob(5,"span",1),b.pc(6,"(selector: '"),b.Ob(7,"span",2),b.pc(8,"ngx-split"),b.Nb(),b.pc(9,"' / exportAs: '"),b.Ob(10,"span",2),b.pc(11,"asSplit"),b.Nb(),b.pc(12,"')"),b.Nb(),b.Nb(),b.Ob(13,"table",3),b.Ob(14,"thead"),b.Ob(15,"tr"),b.Ob(16,"th"),b.pc(17,"@Input()"),b.Nb(),b.Ob(18,"th"),b.pc(19,"Type"),b.Nb(),b.Ob(20,"th"),b.pc(21,"Default"),b.Nb(),b.Ob(22,"th"),b.pc(23,"Details"),b.Nb(),b.Nb(),b.Nb(),b.Ob(24,"tbody"),b.nc(25,c,9,4,"tr",4),b.Nb(),b.Nb(),b.Ob(26,"table",3),b.Ob(27,"thead"),b.Ob(28,"tr"),b.Ob(29,"th"),b.pc(30,"@Output()"),b.Nb(),b.Ob(31,"th"),b.pc(32,"Value"),b.Nb(),b.Ob(33,"th"),b.pc(34,"Details"),b.Nb(),b.Nb(),b.Nb(),b.Ob(35,"tbody"),b.nc(36,o,7,3,"tr",4),b.Nb(),b.Nb(),b.Ob(37,"table",3),b.Ob(38,"thead"),b.Ob(39,"tr"),b.Ob(40,"th"),b.pc(41,"Access from TS class"),b.Nb(),b.Ob(42,"th"),b.pc(43,"Type"),b.Nb(),b.Ob(44,"th"),b.pc(45,"Details"),b.Nb(),b.Nb(),b.Nb(),b.Ob(46,"tbody"),b.nc(47,s,7,3,"tr",4),b.Nb(),b.Nb(),b.Mb(48,"br"),b.Mb(49,"br"),b.Ob(50,"h4"),b.Ob(51,"b"),b.pc(52,"SplitAreaDirective"),b.Nb(),b.pc(53,"\xa0"),b.Ob(54,"span",1),b.pc(55,"(selector: '"),b.Ob(56,"span",2),b.pc(57,"ngx-split-area, [ngx-split-area]"),b.Nb(),b.pc(58,"' / exportAs: '"),b.Ob(59,"span",2),b.pc(60,"asSplitArea"),b.Nb(),b.pc(61,"')"),b.Nb(),b.Nb(),b.Ob(62,"table",3),b.Ob(63,"thead"),b.Ob(64,"tr"),b.Ob(65,"th"),b.pc(66,"@Input()"),b.Nb(),b.Ob(67,"th"),b.pc(68,"Type"),b.Nb(),b.Ob(69,"th"),b.pc(70,"Default"),b.Nb(),b.Ob(71,"th"),b.pc(72,"Details"),b.Nb(),b.Nb(),b.Nb(),b.Ob(73,"tbody"),b.nc(74,r,9,4,"tr",4),b.Nb(),b.Nb(),b.Mb(75,"br"),b.Mb(76,"br"),b.Ob(77,"h4"),b.Ob(78,"b"),b.pc(79,"CSS classes"),b.Nb(),b.Nb(),b.Ob(80,"table",3),b.Ob(81,"thead"),b.Ob(82,"tr"),b.Ob(83,"th",5),b.pc(84,"Split element classes"),b.Nb(),b.Ob(85,"th"),b.pc(86,"Details"),b.Nb(),b.Nb(),b.Nb(),b.Ob(87,"tbody"),b.nc(88,d,5,2,"tr",4),b.Nb(),b.Nb(),b.Ob(89,"table",3),b.Ob(90,"thead"),b.Ob(91,"tr"),b.Ob(92,"th",5),b.pc(93,"Area element classes"),b.Nb(),b.Ob(94,"th"),b.pc(95,"Details"),b.Nb(),b.Nb(),b.Nb(),b.Ob(96,"tbody"),b.nc(97,l,5,2,"tr",4),b.Nb(),b.Nb(),b.Ob(98,"table",3),b.Ob(99,"thead"),b.Ob(100,"tr"),b.Ob(101,"th",5),b.pc(102,"Gutter element classes"),b.Nb(),b.Ob(103,"th"),b.pc(104,"Details"),b.Nb(),b.Nb(),b.Nb(),b.Ob(105,"tbody"),b.nc(106,u,5,2,"tr",4),b.Nb(),b.Nb(),b.Nb()),2&e&&(b.zb(25),b.dc("ngForOf",t.splitDoc.inputs),b.zb(11),b.dc("ngForOf",t.splitDoc.outputs),b.zb(11),b.dc("ngForOf",t.splitDoc.class),b.zb(27),b.dc("ngForOf",t.splitAreaDoc.inputs),b.zb(14),b.dc("ngForOf",t.cssClasses.split),b.zb(9),b.dc("ngForOf",t.cssClasses.area),b.zb(9),b.dc("ngForOf",t.cssClasses.gutter))},directives:[n.s],styles:["[_nghost-%COMP%]{display:block;width:100%;margin:50px 0}h4[_ngcontent-%COMP%]{margin:20px 0}.sel[_ngcontent-%COMP%]{font-size:16px}.sel[_ngcontent-%COMP%], tr[_ngcontent-%COMP%] > th[_ngcontent-%COMP%]{color:#adadad}.selContent[_ngcontent-%COMP%], tr[_ngcontent-%COMP%] > th[_ngcontent-%COMP%]:first-child{font-weight:700;color:#e83e8c}tr[_ngcontent-%COMP%] > td[_ngcontent-%COMP%]:first-child{font-weight:700}"]}),g),O=((p=function e(){_classCallCheck(this,e)}).\u0275mod=b.Jb({type:p}),p.\u0275inj=b.Ib({factory:function(e){return new(e||p)},imports:[[n.c,a.g.forChild([{path:"",component:m}])]]}),p)}}]);