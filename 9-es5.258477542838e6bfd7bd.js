function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{CfhG:function(e,t,i){"use strict";i.r(t),i.d(t,"DocumentationModule",(function(){return h}));var n=i("2kYt"),a=i("sEIs"),r=i("EM62");function o(e,t){if(1&e&&(r.Sb(0,"tr"),r.Sb(1,"td"),r.tc(2),r.Rb(),r.Sb(3,"td"),r.tc(4),r.Rb(),r.Sb(5,"td"),r.Sb(6,"code"),r.tc(7),r.Rb(),r.Rb(),r.Qb(8,"td",6),r.Rb()),2&e){var i=t.$implicit;r.Db(2),r.uc(i.name),r.Db(2),r.uc(i.type),r.Db(3),r.uc(i.default),r.Db(1),r.hc("innerHTML",i.details,r.nc)}}function b(e,t){if(1&e&&(r.Sb(0,"tr"),r.Sb(1,"td"),r.tc(2),r.Rb(),r.Sb(3,"td"),r.Sb(4,"code"),r.tc(5),r.Rb(),r.Rb(),r.Qb(6,"td",6),r.Rb()),2&e){var i=t.$implicit;r.Db(2),r.uc(i.name),r.Db(3),r.uc(i.value),r.Db(1),r.hc("innerHTML",i.details,r.nc)}}function c(e,t){if(1&e&&(r.Sb(0,"tr"),r.Sb(1,"td"),r.tc(2),r.Rb(),r.Sb(3,"td"),r.Sb(4,"code"),r.tc(5),r.Rb(),r.Rb(),r.Qb(6,"td",6),r.Rb()),2&e){var i=t.$implicit;r.Db(2),r.uc(i.name),r.Db(3),r.uc(i.type),r.Db(1),r.hc("innerHTML",i.details,r.nc)}}function s(e,t){if(1&e&&(r.Sb(0,"tr"),r.Sb(1,"td"),r.tc(2),r.Rb(),r.Sb(3,"td"),r.tc(4),r.Rb(),r.Sb(5,"td"),r.Sb(6,"code"),r.tc(7),r.Rb(),r.Rb(),r.Qb(8,"td",6),r.Rb()),2&e){var i=t.$implicit;r.Db(2),r.uc(i.name),r.Db(2),r.uc(i.type),r.Db(3),r.uc(i.default),r.Db(1),r.hc("innerHTML",i.details,r.nc)}}function l(e,t){if(1&e&&(r.Sb(0,"tr"),r.Sb(1,"td"),r.Sb(2,"code"),r.tc(3),r.Rb(),r.Rb(),r.Qb(4,"td",6),r.Rb()),2&e){var i=t.$implicit;r.Db(3),r.uc(i.name),r.Db(1),r.hc("innerHTML",i.details,r.nc)}}function d(e,t){if(1&e&&(r.Sb(0,"tr"),r.Sb(1,"td"),r.Sb(2,"code"),r.tc(3),r.Rb(),r.Rb(),r.Qb(4,"td",6),r.Rb()),2&e){var i=t.$implicit;r.Db(3),r.uc(i.name),r.Db(1),r.hc("innerHTML",i.details,r.nc)}}function u(e,t){if(1&e&&(r.Sb(0,"tr"),r.Sb(1,"td"),r.Sb(2,"code"),r.tc(3),r.Rb(),r.Rb(),r.Qb(4,"td",6),r.Rb()),2&e){var i=t.$implicit;r.Db(3),r.uc(i.name),r.Db(1),r.hc("innerHTML",i.details,r.nc)}}var g,p,m=((p=function e(){_classCallCheck(this,e),this.splitDoc={inputs:[{name:"dir",type:"string",default:'"ltr"',details:'Indicates the directionality of the areas: <code>"ltr"</code> (left to right) or <code>"rtl"</code> (right to left).'},{name:"direction",type:"string",default:'"horizontal"',details:'Select split direction: <code>"horizontal"</code> or <code>"vertical"</code>.'},{name:"disabled",type:"boolean",default:"false",details:"Disable the dragging feature (remove cursor/image on gutters). <code>(gutterClick)</code>/<code>(gutterDblClick)</code> still emits."},{name:"gutterDblClickDuration",type:"number",default:"0",details:"Milliseconds to detect a double click on a gutter. Set it around 300-500ms if you want to use <code>(gutterDblClick)</code> event."},{name:"gutterSize",type:"number",default:"11",details:"Gutters's size (dragging elements) in pixels."},{name:"gutterStep",type:"number",default:"1",details:"Gutter step while moving in pixels."},{name:"restrictMove",type:"boolean",default:"false",details:"Set to <code>true</code> if you want to limit gutter move to adjacent areas only."},{name:"unit",type:"string",default:'"percent"',details:'Selected unit you want to use: <code>"percent"</code> or <code>"pixel"</code> to specify area sizes.'},{name:"useTransition",type:"boolean",default:"false",details:'Add transition when toggling visibility using <code>[visible]</code> or <code>[size]</code> changes.<br><u>Warning: Transitions are not working for <a href="https://github.com/philipwalton/flexbugs#flexbug-16">IE/Edge/Safari</a></u>'}],outputs:[{name:"dragEnd",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when drag ends."},{name:"dragStart",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when drag starts."},{name:"gutterDblClick",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when user double clicks on a gutter. See <code>[gutterDblClickDuration]</code> input."},{name:"gutterClick",value:"{gutterNum: number, sizes: Array<number>}",details:"Emit when user clicks on a gutter. See <code>[gutterDblClickDuration]</code> input."},{name:"transitionEnd",value:"Array<number>",details:'Emit when transition ends (could be triggered from <code>[visible]</code> or <code>[size]</code> changes).<br>Only if <code>[useTransition]="true"</code>.<br><u>Warning: Transitions are not working for <a href="https://github.com/philipwalton/flexbugs#flexbug-16">IE/Edge/Safari</a></u>'}],class:[{name:"dragProgress$",type:"Observable<{gutterNum: number, sizes: Array<number>}>",details:"Emit when dragging. Replace old <code>(dragProgress)</code> template event for better flexibility about change detection mechanism.<br><u>Warning: Running outside zone by design, if you need to notify angular add</u> <code>this.splitEl.dragProgress$.subscribe(x => this.ngZone.run(() => this.x = x));</code>"},{name:"getVisibleAreaSizes()",type:"() => Array<number>",details:"Get all <b>visible</b> area sizes."},{name:"setVisibleAreaSizes()",type:"(Array<number>) => boolean",details:"Set all <b>visible</b> area sizes in one go, return a boolean to know if input values were correct. Useful when combined with <code>dragProgress$</code> to sync multiple splits."}]},this.splitAreaDoc={inputs:[{name:"lockSize",type:"boolean",default:"false",details:"Lock area size, same as <code>minSize</code> = <code>maxSize</code> = <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"maxSize",type:"number",default:"null",details:"Maximum pixel or percent size, can't be bigger than provided <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"minSize",type:"number",default:"null",details:"Minimum pixel or percent size, can't be smaller than provided <code>size</code>.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"},{name:"order",type:"number",default:"null",details:"Order of the area. Used to maintain the order of areas when toggling their visibility. Toggling area visibility without specifying an <code>order</code> leads to weird behavior"},{name:"size",type:"number|'*'",default:"-",details:'Size of the area in selected unit (<code>percent</code>/<code>pixel</code>).<br><u>Percent mode:</u> All areas sizes should equal to 100, If not, all areas will have the same size.<br><u>Pixel mode:</u> An area with  wildcard size (<code>[size]="\'*\'"</code>) is mandatory (only one) and can\'t have <code>[visible]="false"</code> or <code>minSize</code>/<code>maxSize</code>/<code>lockSize</code> properties.'},{name:"visible",type:"boolean",default:"true",details:"Hide area visually but still present in the DOM, use <code>ngIf</code> to completely remove it.<br><u>Not working when <code>[size]=\"'*'\"</code></u>"}]},this.cssClasses={split:[{name:"ngx-init",details:"Added after component initialization."},{name:"ngx-horizontal / ngx-vertical",details:'Depends on <code>&lt;ui-split [direction]="x"&gt;</code>.'},{name:"ngx-disabled",details:'Added when <code>&lt;ui-split [disabled]="true"&gt;</code>.'},{name:"ngx-transition",details:'Added when <code>&lt;ui-split [useTransition]="true"&gt;</code>.'},{name:"ngx-dragging",details:"Added while a gutter is dragged."}],area:[{name:"ui-split-area",details:"Added on all areas."},{name:"ngx-hidden",details:'Added when <code>&lt;ui-split-area [visible]="false"&gt;</code>.'}],gutter:[{name:"ui-split-gutter",details:"Added on all gutters."},{name:"ngx-dragged",details:"Added on gutter while dragged."}]}}).\u0275fac=function(e){return new(e||p)},p.\u0275cmp=r.Jb({type:p,selectors:[["ng-component"]],decls:107,vars:7,consts:[[1,"container"],[1,"sel"],[1,"selContent"],[1,"table","table-striped"],[4,"ngFor","ngForOf"],[2,"width","40%"],[3,"innerHTML"]],template:function(e,t){1&e&&(r.Sb(0,"div",0),r.Sb(1,"h4"),r.Sb(2,"b"),r.tc(3,"SplitComponent"),r.Rb(),r.tc(4,"\xa0"),r.Sb(5,"span",1),r.tc(6,"(selector: '"),r.Sb(7,"span",2),r.tc(8,"ui-split"),r.Rb(),r.tc(9,"' / exportAs: '"),r.Sb(10,"span",2),r.tc(11,"uiSplit"),r.Rb(),r.tc(12,"')"),r.Rb(),r.Rb(),r.Sb(13,"table",3),r.Sb(14,"thead"),r.Sb(15,"tr"),r.Sb(16,"th"),r.tc(17,"@Input()"),r.Rb(),r.Sb(18,"th"),r.tc(19,"Type"),r.Rb(),r.Sb(20,"th"),r.tc(21,"Default"),r.Rb(),r.Sb(22,"th"),r.tc(23,"Details"),r.Rb(),r.Rb(),r.Rb(),r.Sb(24,"tbody"),r.rc(25,o,9,4,"tr",4),r.Rb(),r.Rb(),r.Sb(26,"table",3),r.Sb(27,"thead"),r.Sb(28,"tr"),r.Sb(29,"th"),r.tc(30,"@Output()"),r.Rb(),r.Sb(31,"th"),r.tc(32,"Value"),r.Rb(),r.Sb(33,"th"),r.tc(34,"Details"),r.Rb(),r.Rb(),r.Rb(),r.Sb(35,"tbody"),r.rc(36,b,7,3,"tr",4),r.Rb(),r.Rb(),r.Sb(37,"table",3),r.Sb(38,"thead"),r.Sb(39,"tr"),r.Sb(40,"th"),r.tc(41,"Access from TS class"),r.Rb(),r.Sb(42,"th"),r.tc(43,"Type"),r.Rb(),r.Sb(44,"th"),r.tc(45,"Details"),r.Rb(),r.Rb(),r.Rb(),r.Sb(46,"tbody"),r.rc(47,c,7,3,"tr",4),r.Rb(),r.Rb(),r.Qb(48,"br"),r.Qb(49,"br"),r.Sb(50,"h4"),r.Sb(51,"b"),r.tc(52,"SplitAreaDirective"),r.Rb(),r.tc(53,"\xa0"),r.Sb(54,"span",1),r.tc(55,"(selector: '"),r.Sb(56,"span",2),r.tc(57,"ui-split-area, [ui-split-area]"),r.Rb(),r.tc(58,"' / exportAs: '"),r.Sb(59,"span",2),r.tc(60,"uiSplitArea"),r.Rb(),r.tc(61,"')"),r.Rb(),r.Rb(),r.Sb(62,"table",3),r.Sb(63,"thead"),r.Sb(64,"tr"),r.Sb(65,"th"),r.tc(66,"@Input()"),r.Rb(),r.Sb(67,"th"),r.tc(68,"Type"),r.Rb(),r.Sb(69,"th"),r.tc(70,"Default"),r.Rb(),r.Sb(71,"th"),r.tc(72,"Details"),r.Rb(),r.Rb(),r.Rb(),r.Sb(73,"tbody"),r.rc(74,s,9,4,"tr",4),r.Rb(),r.Rb(),r.Qb(75,"br"),r.Qb(76,"br"),r.Sb(77,"h4"),r.Sb(78,"b"),r.tc(79,"CSS classes"),r.Rb(),r.Rb(),r.Sb(80,"table",3),r.Sb(81,"thead"),r.Sb(82,"tr"),r.Sb(83,"th",5),r.tc(84,"Split element classes"),r.Rb(),r.Sb(85,"th"),r.tc(86,"Details"),r.Rb(),r.Rb(),r.Rb(),r.Sb(87,"tbody"),r.rc(88,l,5,2,"tr",4),r.Rb(),r.Rb(),r.Sb(89,"table",3),r.Sb(90,"thead"),r.Sb(91,"tr"),r.Sb(92,"th",5),r.tc(93,"Area element classes"),r.Rb(),r.Sb(94,"th"),r.tc(95,"Details"),r.Rb(),r.Rb(),r.Rb(),r.Sb(96,"tbody"),r.rc(97,d,5,2,"tr",4),r.Rb(),r.Rb(),r.Sb(98,"table",3),r.Sb(99,"thead"),r.Sb(100,"tr"),r.Sb(101,"th",5),r.tc(102,"Gutter element classes"),r.Rb(),r.Sb(103,"th"),r.tc(104,"Details"),r.Rb(),r.Rb(),r.Rb(),r.Sb(105,"tbody"),r.rc(106,u,5,2,"tr",4),r.Rb(),r.Rb(),r.Rb()),2&e&&(r.Db(25),r.hc("ngForOf",t.splitDoc.inputs),r.Db(11),r.hc("ngForOf",t.splitDoc.outputs),r.Db(11),r.hc("ngForOf",t.splitDoc.class),r.Db(27),r.hc("ngForOf",t.splitAreaDoc.inputs),r.Db(14),r.hc("ngForOf",t.cssClasses.split),r.Db(9),r.hc("ngForOf",t.cssClasses.area),r.Db(9),r.hc("ngForOf",t.cssClasses.gutter))},directives:[n.j],styles:["[_nghost-%COMP%]{display:block;width:100%;margin:50px 0}h4[_ngcontent-%COMP%]{margin:20px 0}.sel[_ngcontent-%COMP%]{font-size:16px}.sel[_ngcontent-%COMP%], tr[_ngcontent-%COMP%] > th[_ngcontent-%COMP%]{color:var(--gray)}.selContent[_ngcontent-%COMP%], tr[_ngcontent-%COMP%] > th[_ngcontent-%COMP%]:first-child{font-weight:700;color:var(--pink)}tr[_ngcontent-%COMP%] > td[_ngcontent-%COMP%]:first-child{font-weight:700}"]}),p),h=((g=function e(){_classCallCheck(this,e)}).\u0275mod=r.Nb({type:g}),g.\u0275inj=r.Mb({factory:function(e){return new(e||g)},imports:[[n.c,a.g.forChild([{path:"",component:m}])]]}),g)}}]);